/*****************************/
/*** FLIPLET DEFAULT THEME ***/
/********* CONTENTS **********/
/*****************************/
/*****************************
01 - BUTTONS
******************************/

/* 01 - BUTTONS */
@mixin primaryButton($options: ()) {
  $configuration: map-merge((
    primaryButtonWidth: $primaryButtonWidth,
    primaryButtonColor: $primaryButtonColor,
    primaryButtonTextColor: $primaryButtonTextColor,
    primaryButtonMarginTop: $primaryButtonMarginTop,
    primaryButtonMarginRight: $primaryButtonMarginRight,
    primaryButtonMarginBottom: $primaryButtonMarginBottom,
    primaryButtonMarginLeft: $primaryButtonMarginLeft,
    primaryButtonPaddingTop: $primaryButtonPaddingTop,
    primaryButtonPaddingRight: $primaryButtonPaddingRight,
    primaryButtonPaddingBottom: $primaryButtonPaddingBottom,
    primaryButtonPaddingLeft: $primaryButtonPaddingLeft,
    primaryButtonBorderSides: $primaryButtonBorderSides,
    primaryButtonBorderWidth: $primaryButtonBorderWidth,
    primaryButtonBorderStyle: $primaryButtonBorderStyle,
    primaryButtonBorderColor: $primaryButtonBorderColor,
    primaryButtonBorderRadius: $primaryButtonBorderRadius,
    primaryButtonShadowStyle: $primaryButtonShadowStyle,
    primaryButtonShadowXoffset: $primaryButtonShadowXoffset,
    primaryButtonShadowYoffset: $primaryButtonShadowYoffset,
    primaryButtonShadowBlur: $primaryButtonShadowBlur,
    primaryButtonShadowSpread: $primaryButtonShadowSpread,
    primaryButtonShadowColor: $primaryButtonShadowColor,
    primaryButtonHoverColor: $primaryButtonHoverColor,
    primaryButtonHoverTextColor: $primaryButtonHoverTextColor,
    primaryButtonHoverBorderSides: $primaryButtonHoverBorderSides,
    primaryButtonHoverBorderWidth: $primaryButtonHoverBorderWidth,
    primaryButtonHoverBorderStyle: $primaryButtonHoverBorderStyle,
    primaryButtonHoverBorderColor: $primaryButtonHoverBorderColor,
    primaryButtonHoverBorderRadius: $primaryButtonHoverBorderRadius,
    primaryButtonHoverShadowStyle: $primaryButtonHoverShadowStyle,
    primaryButtonHoverShadowXoffset: $primaryButtonHoverShadowXoffset,
    primaryButtonHoverShadowYoffset: $primaryButtonHoverShadowYoffset,
    primaryButtonHoverShadowBlur: $primaryButtonHoverShadowBlur,
    primaryButtonHoverShadowSpread: $primaryButtonHoverShadowSpread,
    primaryButtonHoverShadowColor: $primaryButtonHoverShadowColor,
    primaryButtonWidthTablet: $primaryButtonWidthTablet,
    primaryButtonColorTablet: $primaryButtonColorTablet,
    primaryButtonTextColorTablet: $primaryButtonTextColorTablet,
    primaryButtonMarginTopTablet: $primaryButtonMarginTopTablet,
    primaryButtonMarginRightTablet: $primaryButtonMarginRightTablet,
    primaryButtonMarginBottomTablet: $primaryButtonMarginBottomTablet,
    primaryButtonMarginLeftTablet: $primaryButtonMarginLeftTablet,
    primaryButtonPaddingTopTablet: $primaryButtonPaddingTopTablet,
    primaryButtonPaddingRightTablet: $primaryButtonPaddingRightTablet,
    primaryButtonPaddingBottomTablet: $primaryButtonPaddingBottomTablet,
    primaryButtonPaddingLeftTablet: $primaryButtonPaddingLeftTablet,
    primaryButtonBorderSidesTablet: $primaryButtonBorderSidesTablet,
    primaryButtonBorderWidthTablet: $primaryButtonBorderWidthTablet,
    primaryButtonBorderStyleTablet: $primaryButtonBorderStyleTablet,
    primaryButtonBorderColorTablet: $primaryButtonBorderColorTablet,
    primaryButtonBorderRadiusTablet: $primaryButtonBorderRadiusTablet,
    primaryButtonShadowStyleTablet: $primaryButtonShadowStyleTablet,
    primaryButtonShadowXoffsetTablet: $primaryButtonShadowXoffsetTablet,
    primaryButtonShadowYoffsetTablet: $primaryButtonShadowYoffsetTablet,
    primaryButtonShadowBlurTablet: $primaryButtonShadowBlurTablet,
    primaryButtonShadowSpreadTablet: $primaryButtonShadowSpreadTablet,
    primaryButtonShadowColorTablet: $primaryButtonShadowColorTablet,
    primaryButtonHoverColorTablet: $primaryButtonHoverColorTablet,
    primaryButtonHoverTextColorTablet: $primaryButtonHoverTextColorTablet,
    primaryButtonHoverBorderSidesTablet: $primaryButtonHoverBorderSidesTablet,
    primaryButtonHoverBorderWidthTablet: $primaryButtonHoverBorderWidthTablet,
    primaryButtonHoverBorderStyleTablet: $primaryButtonHoverBorderStyleTablet,
    primaryButtonHoverBorderColorTablet: $primaryButtonHoverBorderColorTablet,
    primaryButtonHoverBorderRadiusTablet: $primaryButtonHoverBorderRadiusTablet,
    primaryButtonHoverShadowStyleTablet: $primaryButtonHoverShadowStyleTablet,
    primaryButtonHoverShadowXoffsetTablet: $primaryButtonHoverShadowXoffsetTablet,
    primaryButtonHoverShadowYoffsetTablet: $primaryButtonHoverShadowYoffsetTablet,
    primaryButtonHoverShadowBlurTablet: $primaryButtonHoverShadowBlurTablet,
    primaryButtonHoverShadowSpreadTablet: $primaryButtonHoverShadowSpreadTablet,
    primaryButtonHoverShadowColorTablet: $primaryButtonHoverShadowColorTablet,
    primaryButtonWidthDesktop: $primaryButtonWidthDesktop,
    primaryButtonColorDesktop: $primaryButtonColorDesktop,
    primaryButtonTextColorDesktop: $primaryButtonTextColorDesktop,
    primaryButtonMarginTopDesktop: $primaryButtonMarginTopDesktop,
    primaryButtonMarginRightDesktop: $primaryButtonMarginRightDesktop,
    primaryButtonMarginBottomDesktop: $primaryButtonMarginBottomDesktop,
    primaryButtonMarginLeftDesktop: $primaryButtonMarginLeftDesktop,
    primaryButtonPaddingTopDesktop: $primaryButtonPaddingTopDesktop,
    primaryButtonPaddingRightDesktop: $primaryButtonPaddingRightDesktop,
    primaryButtonPaddingBottomDesktop: $primaryButtonPaddingBottomDesktop,
    primaryButtonPaddingLeftDesktop: $primaryButtonPaddingLeftDesktop,
    primaryButtonBorderSidesDesktop: $primaryButtonBorderSidesDesktop,
    primaryButtonBorderWidthDesktop: $primaryButtonBorderWidthDesktop,
    primaryButtonBorderStyleDesktop: $primaryButtonBorderStyleDesktop,
    primaryButtonBorderColorDesktop: $primaryButtonBorderColorDesktop,
    primaryButtonBorderRadiusDesktop: $primaryButtonBorderRadiusDesktop,
    primaryButtonShadowStyleDesktop: $primaryButtonShadowStyleDesktop,
    primaryButtonShadowXoffsetDesktop: $primaryButtonShadowXoffsetDesktop,
    primaryButtonShadowYoffsetDesktop: $primaryButtonShadowYoffsetDesktop,
    primaryButtonShadowBlurDesktop: $primaryButtonShadowBlurDesktop,
    primaryButtonShadowSpreadDesktop: $primaryButtonShadowSpreadDesktop,
    primaryButtonShadowColorDesktop: $primaryButtonShadowColorDesktop,
    primaryButtonHoverColorDesktop $primaryButtonHoverColorDesktop,
    primaryButtonHoverTextColorDesktop $primaryButtonHoverTextColorDesktop,
    primaryButtonHoverBorderSidesDesktop $primaryButtonHoverBorderSidesDesktop,
    primaryButtonHoverBorderWidthDesktop $primaryButtonHoverBorderWidthDesktop,
    primaryButtonHoverBorderStyleDesktop $primaryButtonHoverBorderStyleDesktop,
    primaryButtonHoverBorderColorDesktop $primaryButtonHoverBorderColorDesktop,
    primaryButtonHoverBorderRadiusDesktop $primaryButtonHoverBorderRadiusDesktop,
    primaryButtonHoverShadowStyleDesktop $primaryButtonHoverShadowStyleDesktop,
    primaryButtonHoverShadowXoffsetDesktop $primaryButtonHoverShadowXoffsetDesktop,
    primaryButtonHoverShadowYoffsetDesktop $primaryButtonHoverShadowYoffsetDesktop,
    primaryButtonHoverShadowBlurDesktop $primaryButtonHoverShadowBlurDesktop,
    primaryButtonHoverShadowSpreadDesktop $primaryButtonHoverShadowSpreadDesktop,
    primaryButtonHoverShadowColorDesktop $primaryButtonHoverShadowColorDesktop
  ), $options);

  .btn {
    &.btn-primary {
      width: map-get($configuration, primaryButtonWidth);
      background-color: map-get($configuration, primaryButtonColor);
      color: map-get($configuration, primaryButtonTextColor);
      margin: map-get($configuration, primaryButtonMarginTop)
        map-get($configuration, primaryButtonMarginRight)
        map-get($configuration, primaryButtonMarginBottom)
        map-get($configuration, primaryButtonMarginLeft);
      padding: map-get($configuration, primaryButtonPaddingTop)
        map-get($configuration, primaryButtonPaddingRight)
        map-get($configuration, primaryButtonPaddingBottom)
        map-get($configuration, primaryButtonPaddingLeft);
      border-radius: map-get($configuration, primaryButtonBorderRadius);

      @include borderOnly((
        borderSides: map-get($configuration, primaryButtonBorderSides),
        borderWidth: map-get($configuration, primaryButtonBorderWidth),
        borderStyle: map-get($configuration, primaryButtonBorderStyle),
        borderColor: map-get($configuration, primaryButtonBorderColor)
      ));

      @include shadowOnly((
        shadowStyle: map-get($configuration, primaryButtonShadowStyle),
        shadowXOffset: map-get($configuration, primaryButtonShadowXoffset),
        shadowYOffset: map-get($configuration, primaryButtonShadowYoffset),
        shadowBlur: map-get($configuration, primaryButtonShadowBlur),
        shadowSpread: map-get($configuration, primaryButtonShadowSpread),
        shadowColor: map-get($configuration, primaryButtonShadowColor)
      ));

      &:focus,
      &:hover,
      &:active:focus,
      &:active:hover {
        background-color: map-get($configuration, primaryButtonHoverColor);
        color: map-get($configuration, primaryButtonHoverTextColor);
        border-radius: map-get($configuration, primaryButtonHoverBorderRadius);

        @include borderOnly((
          borderSides: map-get($configuration, primaryButtonHoverBorderSides),
          borderWidth: map-get($configuration, primaryButtonHoverBorderWidth),
          borderStyle: map-get($configuration, primaryButtonHoverBorderStyle),
          borderColor: map-get($configuration, primaryButtonHoverBorderColor)
        ));

        @include shadowOnly((
          shadowStyle: map-get($configuration, primaryButtonHoverShadowStyle),
          shadowXOffset: map-get($configuration, primaryButtonHoverShadowXoffset),
          shadowYOffset: map-get($configuration, primaryButtonHoverShadowYoffset),
          shadowBlur: map-get($configuration, primaryButtonHoverShadowBlur),
          shadowSpread: map-get($configuration, primaryButtonHoverShadowSpread),
          shadowColor: map-get($configuration, primaryButtonHoverShadowColor)
        ));
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        width: map-get($configuration, primaryButtonWidthTablet);
        background-color: map-get($configuration, primaryButtonColorTablet);
        color: map-get($configuration, primaryButtonTextColorTablet);
        margin: map-get($configuration, primaryButtonMarginTopTablet)
          map-get($configuration, primaryButtonMarginRightTablet)
          map-get($configuration, primaryButtonMarginBottomTablet)
          map-get($configuration, primaryButtonMarginLeftTablet);
        padding: map-get($configuration, primaryButtonPaddingTopTablet)
          map-get($configuration, primaryButtonPaddingRightTablet)
          map-get($configuration, primaryButtonPaddingBottomTablet)
          map-get($configuration, primaryButtonPaddingLeftTablet);
        border-radius: map-get($configuration, primaryButtonBorderRadiusTablet);

        @include borderOnly((
          borderSides: map-get($configuration, primaryButtonBorderSidesTablet),
          borderWidth: map-get($configuration, primaryButtonBorderWidthTablet),
          borderStyle: map-get($configuration, primaryButtonBorderStyleTablet),
          borderColor: map-get($configuration, primaryButtonBorderColorTablet)
        ));

        @include shadowOnly((
          shadowStyle: map-get($configuration, primaryButtonShadowStyleTablet),
          shadowXOffset: map-get($configuration, primaryButtonShadowXoffsetTablet),
          shadowYOffset: map-get($configuration, primaryButtonShadowYoffsetTablet),
          shadowBlur: map-get($configuration, primaryButtonShadowBlurTablet),
          shadowSpread: map-get($configuration, primaryButtonShadowSpreadTablet),
          shadowColor: map-get($configuration, primaryButtonShadowColorTablet)
        ));

        &:focus,
        &:hover,
        &:active:focus,
        &:active:hover {
          background-color: map-get($configuration, primaryButtonHoverColorTablet);
          color: map-get($configuration, primaryButtonHoverTextColorTablet);
          border-radius: map-get($configuration, primaryButtonHoverBorderRadiusTablet);

          @include borderOnly((
            borderSides: map-get($configuration, primaryButtonHoverBorderSidesTablet),
            borderWidth: map-get($configuration, primaryButtonHoverBorderWidthTablet),
            borderStyle: map-get($configuration, primaryButtonHoverBorderStyleTablet),
            borderColor: map-get($configuration, primaryButtonHoverBorderColorTablet)
          ));

          @include shadowOnly((
            shadowStyle: map-get($configuration, primaryButtonHoverShadowStyleTablet),
            shadowXOffset: map-get($configuration, primaryButtonHoverShadowXoffsetTablet),
            shadowYOffset: map-get($configuration, primaryButtonHoverShadowYoffsetTablet),
            shadowBlur: map-get($configuration, primaryButtonHoverShadowBlurTablet),
            shadowSpread: map-get($configuration, primaryButtonHoverShadowSpreadTablet),
            shadowColor: map-get($configuration, primaryButtonHoverShadowColorTablet)
          ));
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        width: map-get($configuration, primaryButtonWidthDesktop);
        background-color: map-get($configuration, primaryButtonColorDesktop);
        color: map-get($configuration, primaryButtonTextColorDesktop);
        margin: map-get($configuration, primaryButtonMarginTopDesktop)
          map-get($configuration, primaryButtonMarginRightDesktop)
          map-get($configuration, primaryButtonMarginBottomDesktop)
          map-get($configuration, primaryButtonMarginLeftDesktop);
        padding: map-get($configuration, primaryButtonPaddingTopDesktop)
          map-get($configuration, primaryButtonPaddingRightDesktop)
          map-get($configuration, primaryButtonPaddingBottomDesktop)
          map-get($configuration, primaryButtonPaddingLeftDesktop);
        border-radius: map-get($configuration, primaryButtonBorderRadiusDesktop);

        @include borderOnly((
          borderSides: map-get($configuration, primaryButtonBorderSidesDesktop),
          borderWidth: map-get($configuration, primaryButtonBorderWidthDesktop),
          borderStyle: map-get($configuration, primaryButtonBorderStyleDesktop),
          borderColor: map-get($configuration, primaryButtonBorderColorDesktop)
        ));

        @include shadowOnly((
          shadowStyle: map-get($configuration, primaryButtonShadowStyleDesktop),
          shadowXOffset: map-get($configuration, primaryButtonShadowXoffsetDesktop),
          shadowYOffset: map-get($configuration, primaryButtonShadowYoffsetDesktop),
          shadowBlur: map-get($configuration, primaryButtonShadowBlurDesktop),
          shadowSpread: map-get($configuration, primaryButtonShadowSpreadDesktop),
          shadowColor: map-get($configuration, primaryButtonShadowColorDesktop)
        ));

        &:focus,
        &:hover,
        &:active:focus,
        &:active:hover {
          background-color: map-get($configuration, primaryButtonHoverColorDesktop);
          color: map-get($configuration, primaryButtonHoverTextColorDesktop);
          border-radius: map-get($configuration, primaryButtonHoverBorderRadiusDesktop);

          @include borderOnly((
            borderSides: map-get($configuration, primaryButtonHoverBorderSidesDesktop),
            borderWidth: map-get($configuration, primaryButtonHoverBorderWidthDesktop),
            borderStyle: map-get($configuration, primaryButtonHoverBorderStyleDesktop),
            borderColor: map-get($configuration, primaryButtonHoverBorderColorDesktop)
          ));

          @include shadowOnly((
            shadowStyle: map-get($configuration, primaryButtonHoverShadowStyleDesktop),
            shadowXOffset: map-get($configuration, primaryButtonHoverShadowXoffsetDesktop),
            shadowYOffset: map-get($configuration, primaryButtonHoverShadowYoffsetDesktop),
            shadowBlur: map-get($configuration, primaryButtonHoverShadowBlurDesktop),
            shadowSpread: map-get($configuration, primaryButtonHoverShadowSpreadDesktop),
            shadowColor: map-get($configuration, primaryButtonHoverShadowColorDesktop)
          ));
        }
      }
    }
  }
}

.btn {
  &.btn-primary {
    @include button();

    &:focus,
    &:hover,
    &:active:focus,
    &:active:hover {
      @include button((
        backgroundColor: $primaryButtonHoverColor,
        textColor: $primaryButtonHoverTextColor,
        borderSides: $primaryButtonHoverBorderSides,
        borderWidth: $primaryButtonHoverBorderWidth,
        borderStyle: $primaryButtonHoverBorderStyle,
        borderColor: $primaryButtonHoverBorderColor,
        borderRadius: $primaryButtonHoverBorderRadius,
        shadowStyle: $primaryButtonHoverShadowStyle,
        shadowXOffset: $primaryButtonHoverShadowXoffset,
        shadowYOffset: $primaryButtonHoverShadowYoffset,
        shadowBlur: $primaryButtonHoverShadowBlur,
        shadowSpread: $primaryButtonHoverShadowSpread,
        shadowColor: $primaryButtonHoverShadowColor
      ));
    }

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @include button((
        width: $primaryButtonWidthTablet,
        backgroundColor: $primaryButtonColorTablet,
        textColor: $primaryButtonTextColorTablet,
        marginTop: $primaryButtonMarginTopTablet,
        marginRight: $primaryButtonMarginRightTablet,
        marginBottom: $primaryButtonMarginBottomTablet,
        marginLeft: $primaryButtonMarginLeftTablet,
        paddingTop: $primaryButtonPaddingTopTablet,
        paddingRight: $primaryButtonPaddingRightTablet,
        paddingBottom: $primaryButtonPaddingBottomTablet,
        paddingLeft: $primaryButtonPaddingLeftTablet,
        borderSides: $primaryButtonBorderSidesTablet,
        borderWidth: $primaryButtonBorderWidthTablet,
        borderStyle: $primaryButtonBorderStyleTablet,
        borderColor: $primaryButtonBorderColorTablet,
        borderRadius: $primaryButtonBorderRadiusTablet,
        shadowStyle: $primaryButtonShadowStyleTablet,
        shadowXOffset: $primaryButtonShadowXoffsetTablet,
        shadowYOffset: $primaryButtonShadowYoffsetTablet,
        shadowBlur: $primaryButtonShadowBlurTablet,
        shadowSpread: $primaryButtonShadowSpreadTablet,
        shadowColor: $primaryButtonShadowColorTablet
      ));

      &:focus,
      &:hover,
      &:active:focus,
      &:active:hover {
        @include button((
          backgroundColor: $primaryButtonHoverColorTablet,
          textColor: $primaryButtonHoverTextColorTablet,
          borderSides: $primaryButtonHoverBorderSidesTablet,
          borderWidth: $primaryButtonHoverBorderWidthTablet,
          borderStyle: $primaryButtonHoverBorderStyleTablet,
          borderColor: $primaryButtonHoverBorderColorTablet,
          borderRadius: $primaryButtonHoverBorderRadiusTablet,
          shadowStyle: $primaryButtonHoverShadowStyleTablet,
          shadowXOffset: $primaryButtonHoverShadowXoffsetTablet,
          shadowYOffset: $primaryButtonHoverShadowYoffsetTablet,
          shadowBlur: $primaryButtonHoverShadowBlurTablet,
          shadowSpread: $primaryButtonHoverShadowSpreadTablet,
          shadowColor: $primaryButtonHoverShadowColorTablet
        ));
      }
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @include button((
        width: $primaryButtonWidthDesktop,
        backgroundColor: $primaryButtonColorDesktop,
        textColor: $primaryButtonTextColorDesktop,
        marginTop: $primaryButtonMarginTopDesktop,
        marginRight: $primaryButtonMarginRightDesktop,
        marginBottom: $primaryButtonMarginBottomDesktop,
        marginLeft: $primaryButtonMarginLeftDesktop,
        paddingTop: $primaryButtonPaddingTopDesktop,
        paddingRight: $primaryButtonPaddingRightDesktop,
        paddingBottom: $primaryButtonPaddingBottomDesktop,
        paddingLeft: $primaryButtonPaddingLeftDesktop,
        borderSides: $primaryButtonBorderSidesDesktop,
        borderWidth: $primaryButtonBorderWidthDesktop,
        borderStyle: $primaryButtonBorderStyleDesktop,
        borderColor: $primaryButtonBorderColorDesktop,
        borderRadius: $primaryButtonBorderRadiusDesktop,
        shadowStyle: $primaryButtonShadowStyleDesktop,
        shadowXOffset: $primaryButtonShadowXoffsetDesktop,
        shadowYOffset: $primaryButtonShadowYoffsetDesktop,
        shadowBlur: $primaryButtonShadowBlurDesktop,
        shadowSpread: $primaryButtonShadowSpreadDesktop,
        shadowColor: $primaryButtonShadowColorDesktop
      ));

      &:focus,
      &:hover,
      &:active:focus,
      &:active:hover {
        @include button((
          backgroundColor: $primaryButtonHoverColorDesktop,
          textColor: $primaryButtonHoverTextColorDesktop,
          borderSides: $primaryButtonHoverBorderSidesDesktop,
          borderWidth: $primaryButtonHoverBorderWidthDesktop,
          borderStyle: $primaryButtonHoverBorderStyleDesktop,
          borderColor: $primaryButtonHoverBorderColorDesktop,
          borderRadius: $primaryButtonHoverBorderRadiusDesktop,
          shadowStyle: $primaryButtonHoverShadowStyleDesktop,
          shadowXOffset: $primaryButtonHoverShadowXoffsetDesktop,
          shadowYOffset: $primaryButtonHoverShadowYoffsetDesktop,
          shadowBlur: $primaryButtonHoverShadowBlurDesktop,
          shadowSpread: $primaryButtonHoverShadowSpreadDesktop,
          shadowColor: $primaryButtonHoverShadowColorDesktop
        ));
      }
    }
  }

  &.btn-secondary {
    @include button((
      width: $secondaryButtonWidth,
      backgroundColor: $secondaryButtonColor,
      textColor: $secondaryButtonTextColor,
      marginTop: $secondaryButtonMarginTop,
      marginRight: $secondaryButtonMarginRight,
      marginBottom: $secondaryButtonMarginBottom,
      marginLeft: $secondaryButtonMarginLeft,
      paddingTop: $secondaryButtonPaddingTop,
      paddingRight: $secondaryButtonPaddingRight,
      paddingBottom: $secondaryButtonPaddingBottom,
      paddingLeft: $secondaryButtonPaddingLeft,
      borderSides: $secondaryButtonBorderSides,
      borderWidth: $secondaryButtonBorderWidth,
      borderStyle: $secondaryButtonBorderStyle,
      borderColor: $secondaryButtonBorderColor,
      borderRadius: $secondaryButtonBorderRadius,
      shadowStyle: $secondaryButtonShadowStyle,
      shadowXOffset: $secondaryButtonShadowXoffset,
      shadowYOffset: $secondaryButtonShadowYoffset,
      shadowBlur: $secondaryButtonShadowBlur,
      shadowSpread: $secondaryButtonShadowSpread,
      shadowColor: $secondaryButtonShadowColor
    ));

    &:focus,
    &:hover,
    &:active:focus,
    &:active:hover {
      @include button((
        backgroundColor: $secondaryButtonHoverColor,
        textColor: $secondaryButtonHoverTextColor,
        borderSides: $secondaryButtonHoverBorderSides,
        borderWidth: $secondaryButtonHoverBorderWidth,
        borderStyle: $secondaryButtonHoverBorderStyle,
        borderColor: $secondaryButtonHoverBorderColor,
        borderRadius: $secondaryButtonHoverBorderRadius,
        shadowStyle: $secondaryButtonHoverShadowStyle,
        shadowXOffset: $secondaryButtonHoverShadowXoffset,
        shadowYOffset: $secondaryButtonHoverShadowYoffset,
        shadowBlur: $secondaryButtonHoverShadowBlur,
        shadowSpread: $secondaryButtonHoverShadowSpread,
        shadowColor: $secondaryButtonHoverShadowColor
      ));
    }

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @include button((
        width: $secondaryButtonWidthTablet,
        backgroundColor: $secondaryButtonColorTablet,
        textColor: $secondaryButtonTextColorTablet,
        marginTop: $secondaryButtonMarginTopTablet,
        marginRight: $secondaryButtonMarginRightTablet,
        marginBottom: $secondaryButtonMarginBottomTablet,
        marginLeft: $secondaryButtonMarginLeftTablet,
        paddingTop: $secondaryButtonPaddingTopTablet,
        paddingRight: $secondaryButtonPaddingRightTablet,
        paddingBottom: $secondaryButtonPaddingBottomTablet,
        paddingLeft: $secondaryButtonPaddingLeftTablet,
        borderSides: $secondaryButtonBorderSidesTablet,
        borderWidth: $secondaryButtonBorderWidthTablet,
        borderStyle: $secondaryButtonBorderStyleTablet,
        borderColor: $secondaryButtonBorderColorTablet,
        borderRadius: $secondaryButtonBorderRadiusTablet,
        shadowStyle: $secondaryButtonShadowStyleTablet,
        shadowXOffset: $secondaryButtonShadowXoffsetTablet,
        shadowYOffset: $secondaryButtonShadowYoffsetTablet,
        shadowBlur: $secondaryButtonShadowBlurTablet,
        shadowSpread: $secondaryButtonShadowSpreadTablet,
        shadowColor: $secondaryButtonShadowColorTablet
      ));

      &:focus,
      &:hover,
      &:active:focus,
      &:active:hover {
        @include button((
          backgroundColor: $secondaryButtonHoverColorTablet,
          textColor: $secondaryButtonHoverTextColorTablet,
          borderSides: $secondaryButtonHoverBorderSidesTablet,
          borderWidth: $secondaryButtonHoverBorderWidthTablet,
          borderStyle: $secondaryButtonHoverBorderStyleTablet,
          borderColor: $secondaryButtonHoverBorderColorTablet,
          borderRadius: $secondaryButtonHoverBorderRadiusTablet,
          shadowStyle: $secondaryButtonHoverShadowStyleTablet,
          shadowXOffset: $secondaryButtonHoverShadowXoffsetTablet,
          shadowYOffset: $secondaryButtonHoverShadowYoffsetTablet,
          shadowBlur: $secondaryButtonHoverShadowBlurTablet,
          shadowSpread: $secondaryButtonHoverShadowSpreadTablet,
          shadowColor: $secondaryButtonHoverShadowColorTablet
        ));
      }
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @include button((
        width: $secondaryButtonWidthDesktop,
        backgroundColor: $secondaryButtonColorDesktop,
        textColor: $secondaryButtonTextColorDesktop,
        marginTop: $secondaryButtonMarginTopDesktop,
        marginRight: $secondaryButtonMarginRightDesktop,
        marginBottom: $secondaryButtonMarginBottomDesktop,
        marginLeft: $secondaryButtonMarginLeftDesktop,
        paddingTop: $secondaryButtonPaddingTopDesktop,
        paddingRight: $secondaryButtonPaddingRightDesktop,
        paddingBottom: $secondaryButtonPaddingBottomDesktop,
        paddingLeft: $secondaryButtonPaddingLeftDesktop,
        borderSides: $secondaryButtonBorderSidesDesktop,
        borderWidth: $secondaryButtonBorderWidthDesktop,
        borderStyle: $secondaryButtonBorderStyleDesktop,
        borderColor: $secondaryButtonBorderColorDesktop,
        borderRadius: $secondaryButtonBorderRadiusDesktop,
        shadowStyle: $secondaryButtonShadowStyleDesktop,
        shadowXOffset: $secondaryButtonShadowXoffsetDesktop,
        shadowYOffset: $secondaryButtonShadowYoffsetDesktop,
        shadowBlur: $secondaryButtonShadowBlurDesktop,
        shadowSpread: $secondaryButtonShadowSpreadDesktop,
        shadowColor: $secondaryButtonShadowColorDesktop
      ));

      &:focus,
      &:hover,
      &:active:focus,
      &:active:hover {
        @include button((
          backgroundColor: $secondaryButtonHoverColorDesktop,
          textColor: $secondaryButtonHoverTextColorDesktop,
          borderSides: $secondaryButtonHoverBorderSidesDesktop,
          borderWidth: $secondaryButtonHoverBorderWidthDesktop,
          borderStyle: $secondaryButtonHoverBorderStyleDesktop,
          borderColor: $secondaryButtonHoverBorderColorDesktop,
          borderRadius: $secondaryButtonHoverBorderRadiusDesktop,
          shadowStyle: $secondaryButtonHoverShadowStyleDesktop,
          shadowXOffset: $secondaryButtonHoverShadowXoffsetDesktop,
          shadowYOffset: $secondaryButtonHoverShadowYoffsetDesktop,
          shadowBlur: $secondaryButtonHoverShadowBlurDesktop,
          shadowSpread: $secondaryButtonHoverShadowSpreadDesktop,
          shadowColor: $secondaryButtonHoverShadowColorDesktop
        ));
      }
    }
  }

  &.btn-primary,
  &.btn-secondary {
    &.disabled,
    &[disabled] {
      opacity: 0.65;
      pointer-events: none;
    }
  }
}
