@mixin newsFeed($options: (), $widgetInstanceId: '', $widgetInstanceUUID: '') {
  $configuration: map-merge((
    newsFeedOverlayFontColor: $newsFeedOverlayFontColor,
    newsFeedOverlayFontColorTablet: $newsFeedOverlayFontColorTablet,
    newsFeedOverlayFontColorDesktop: $newsFeedOverlayFontColorDesktop,
    newsFeedWidth: $newsFeedWidth,
    newsFeedWidthTablet: $newsFeedWidthTablet,
    newsFeedWidthDesktop: $newsFeedWidthDesktop,
    newsFeedMaxWidth: $newsFeedMaxWidth,
    newsFeedMaxWidthTablet: $newsFeedMaxWidthTablet,
    newsFeedMaxWidthDesktop: $newsFeedMaxWidthDesktop,
    newsFeedMarginTop: $newsFeedMarginTop,
    newsFeedMarginTopTablet: $newsFeedMarginTopTablet,
    newsFeedMarginTopDesktop: $newsFeedMarginTopDesktop,
    newsFeedMarginRight: $newsFeedMarginRight,
    newsFeedMarginRightTablet: $newsFeedMarginRightTablet,
    newsFeedMarginRightDesktop: $newsFeedMarginRightDesktop,
    newsFeedMarginBottom: $newsFeedMarginBottom,
    newsFeedMarginBottomTablet: $newsFeedMarginBottomTablet,
    newsFeedMarginBottomDesktop: $newsFeedMarginBottomDesktop,
    newsFeedMarginLeft: $newsFeedMarginLeft,
    newsFeedMarginLeftTablet: $newsFeedMarginLeftTablet,
    newsFeedMarginLeftDesktop: $newsFeedMarginLeftDesktop,
    newsFeedVisibility: $newsFeedVisibility,
    newsFeedVisibilityTablet: $newsFeedVisibilityTablet,
    newsFeedVisibilityDesktop: $newsFeedVisibilityDesktop,
    newsFeedTitleFontFamily: $newsFeedTitleFontFamily,
    newsFeedTitleFontFamilyTablet: $newsFeedTitleFontFamilyTablet,
    newsFeedTitleFontFamilyDesktop: $newsFeedTitleFontFamilyDesktop,
    newsFeedTitleFontSize: $newsFeedTitleFontSize,
    newsFeedTitleFontSizeTablet: $newsFeedTitleFontSizeTablet,
    newsFeedTitleFontSizeDesktop: $newsFeedTitleFontSizeDesktop,
    newsFeedTitleFontColor: $newsFeedTitleFontColor,
    newsFeedTitleFontColorTablet: $newsFeedTitleFontColorTablet,
    newsFeedTitleFontColorDesktop: $newsFeedTitleFontColorDesktop,
    newsFeedTitleFontWeight: $newsFeedTitleFontWeight,
    newsFeedTitleFontWeightTablet: $newsFeedTitleFontWeightTablet,
    newsFeedTitleFontWeightDesktop: $newsFeedTitleFontWeightDesktop,
    newsFeedTitleItalic: $newsFeedTitleItalic,
    newsFeedTitleItalicTablet: $newsFeedTitleItalicTablet,
    newsFeedTitleItalicDesktop: $newsFeedTitleItalicDesktop,
    newsFeedTitleUnderline: $newsFeedTitleUnderline,
    newsFeedTitleUnderlineTablet: $newsFeedTitleUnderlineTablet,
    newsFeedTitleUnderlineDesktop: $newsFeedTitleUnderlineDesktop,
    newsFeedTitleLineHeight: $newsFeedTitleLineHeight,
    newsFeedTitleLineHeightTablet: $newsFeedTitleLineHeightTablet,
    newsFeedTitleLineHeightDesktop: $newsFeedTitleLineHeightDesktop,
    newsFeedTitleMarginTop: $newsFeedTitleMarginTop,
    newsFeedTitleMarginTopTablet: $newsFeedTitleMarginTopTablet,
    newsFeedTitleMarginTopDesktop: $newsFeedTitleMarginTopDesktop,
    newsFeedTitleMarginBottom: $newsFeedTitleMarginBottom,
    newsFeedTitleMarginBottomTablet: $newsFeedTitleMarginBottomTablet,
    newsFeedTitleMarginBottomDesktop: $newsFeedTitleMarginBottomDesktop,
    newsFeedDescriptionFontFamily: $newsFeedDescriptionFontFamily,
    newsFeedDescriptionFontFamilyTablet: $newsFeedDescriptionFontFamilyTablet,
    newsFeedDescriptionFontFamilyDesktop: $newsFeedDescriptionFontFamilyDesktop,
    newsFeedDescriptionFontSize: $newsFeedDescriptionFontSize,
    newsFeedDescriptionFontSizeTablet: $newsFeedDescriptionFontSizeTablet,
    newsFeedDescriptionFontSizeDesktop: $newsFeedDescriptionFontSizeDesktop,
    newsFeedDescriptionFontColor: $newsFeedDescriptionFontColor,
    newsFeedDescriptionFontColorTablet: $newsFeedDescriptionFontColorTablet,
    newsFeedDescriptionFontColorDesktop: $newsFeedDescriptionFontColorDesktop,
    newsFeedDescriptionFontWeight: $newsFeedDescriptionFontWeight,
    newsFeedDescriptionFontWeightTablet: $newsFeedDescriptionFontWeightTablet,
    newsFeedDescriptionFontWeightDesktop: $newsFeedDescriptionFontWeightDesktop,
    newsFeedDescriptionItalic: $newsFeedDescriptionItalic,
    newsFeedDescriptionItalicTablet: $newsFeedDescriptionItalicTablet,
    newsFeedDescriptionItalicDesktop: $newsFeedDescriptionItalicDesktop,
    newsFeedDescriptionUnderline: $newsFeedDescriptionUnderline,
    newsFeedDescriptionUnderlineTablet: $newsFeedDescriptionUnderlineTablet,
    newsFeedDescriptionUnderlineDesktop: $newsFeedDescriptionUnderlineDesktop,
    newsFeedDescriptionLineHeight: $newsFeedDescriptionLineHeight,
    newsFeedDescriptionLineHeightTablet: $newsFeedDescriptionLineHeightTablet,
    newsFeedDescriptionLineHeightDesktop: $newsFeedDescriptionLineHeightDesktop,
    newsFeedDescriptionMarginTop: $newsFeedDescriptionMarginTop,
    newsFeedDescriptionMarginTopTablet: $newsFeedDescriptionMarginTopTablet,
    newsFeedDescriptionMarginTopDesktop: $newsFeedDescriptionMarginTopDesktop,
    newsFeedDescriptionMarginBottom: $newsFeedDescriptionMarginBottom,
    newsFeedDescriptionMarginBottomTablet: $newsFeedDescriptionMarginBottomTablet,
    newsFeedDescriptionMarginBottomDesktop: $newsFeedDescriptionMarginBottomDesktop,
    newsFeedSecondDescriptionFontFamily: $newsFeedSecondDescriptionFontFamily,
    newsFeedSecondDescriptionFontFamilyTablet: $newsFeedSecondDescriptionFontFamilyTablet,
    newsFeedSecondDescriptionFontFamilyDesktop: $newsFeedSecondDescriptionFontFamilyDesktop,
    newsFeedSecondDescriptionFontSize: $newsFeedSecondDescriptionFontSize,
    newsFeedSecondDescriptionFontSizeTablet: $newsFeedSecondDescriptionFontSizeTablet,
    newsFeedSecondDescriptionFontSizeDesktop: $newsFeedSecondDescriptionFontSizeDesktop,
    newsFeedSecondDescriptionFontColor: $newsFeedSecondDescriptionFontColor,
    newsFeedSecondDescriptionFontColorTablet: $newsFeedSecondDescriptionFontColorTablet,
    newsFeedSecondDescriptionFontColorDesktop: $newsFeedSecondDescriptionFontColorDesktop,
    newsFeedSecondDescriptionFontWeight: $newsFeedSecondDescriptionFontWeight,
    newsFeedSecondDescriptionFontWeightTablet: $newsFeedSecondDescriptionFontWeightTablet,
    newsFeedSecondDescriptionFontWeightDesktop: $newsFeedSecondDescriptionFontWeightDesktop,
    newsFeedSecondDescriptionItalic: $newsFeedSecondDescriptionItalic,
    newsFeedSecondDescriptionItalicTablet: $newsFeedSecondDescriptionItalicTablet,
    newsFeedSecondDescriptionItalicDesktop: $newsFeedSecondDescriptionItalicDesktop,
    newsFeedSecondDescriptionUnderline: $newsFeedSecondDescriptionUnderline,
    newsFeedSecondDescriptionUnderlineTablet: $newsFeedSecondDescriptionUnderlineTablet,
    newsFeedSecondDescriptionUnderlineDesktop: $newsFeedSecondDescriptionUnderlineDesktop,
    newsFeedSecondDescriptionLineHeight: $newsFeedSecondDescriptionLineHeight,
    newsFeedSecondDescriptionLineHeightTablet: $newsFeedSecondDescriptionLineHeightTablet,
    newsFeedSecondDescriptionLineHeightDesktop: $newsFeedSecondDescriptionLineHeightDesktop,
    newsFeedSecondDescriptionMarginTop: $newsFeedSecondDescriptionMarginTop,
    newsFeedSecondDescriptionMarginTopTablet: $newsFeedSecondDescriptionMarginTopTablet,
    newsFeedSecondDescriptionMarginTopDesktop: $newsFeedSecondDescriptionMarginTopDesktop,
    newsFeedSecondDescriptionMarginBottom: $newsFeedSecondDescriptionMarginBottom,
    newsFeedSecondDescriptionMarginBottomTablet: $newsFeedSecondDescriptionMarginBottomTablet,
    newsFeedSecondDescriptionMarginBottomDesktop: $newsFeedSecondDescriptionMarginBottomDesktop,
    newsFeedDetailTitleFontFamily: $newsFeedDetailTitleFontFamily,
    newsFeedDetailTitleFontFamilyTablet: $newsFeedDetailTitleFontFamilyTablet,
    newsFeedDetailTitleFontFamilyDesktop: $newsFeedDetailTitleFontFamilyDesktop,
    newsFeedDetailTitleFontSize: $newsFeedDetailTitleFontSize,
    newsFeedDetailTitleFontSizeTablet: $newsFeedDetailTitleFontSizeTablet,
    newsFeedDetailTitleFontSizeDesktop: $newsFeedDetailTitleFontSizeDesktop,
    newsFeedDetailTitleFontColor: $newsFeedDetailTitleFontColor,
    newsFeedDetailTitleFontColorTablet: $newsFeedDetailTitleFontColorTablet,
    newsFeedDetailTitleFontColorDesktop: $newsFeedDetailTitleFontColorDesktop,
    newsFeedDetailTitleFontWeight: $newsFeedDetailTitleFontWeight,
    newsFeedDetailTitleFontWeightTablet: $newsFeedDetailTitleFontWeightTablet,
    newsFeedDetailTitleFontWeightDesktop: $newsFeedDetailTitleFontWeightDesktop,
    newsFeedDetailTitleItalic: $newsFeedDetailTitleItalic,
    newsFeedDetailTitleItalicTablet: $newsFeedDetailTitleItalicTablet,
    newsFeedDetailTitleItalicDesktop: $newsFeedDetailTitleItalicDesktop,
    newsFeedDetailTitleUnderline: $newsFeedDetailTitleUnderline,
    newsFeedDetailTitleUnderlineTablet: $newsFeedDetailTitleUnderlineTablet,
    newsFeedDetailTitleUnderlineDesktop: $newsFeedDetailTitleUnderlineDesktop,
    newsFeedDetailTitleLineHeight: $newsFeedDetailTitleLineHeight,
    newsFeedDetailTitleLineHeightTablet: $newsFeedDetailTitleLineHeightTablet,
    newsFeedDetailTitleLineHeightDesktop: $newsFeedDetailTitleLineHeightDesktop,
    newsFeedDetailTitleMarginTop: $newsFeedDetailTitleMarginTop,
    newsFeedDetailTitleMarginTopTablet: $newsFeedDetailTitleMarginTopTablet,
    newsFeedDetailTitleMarginTopDesktop: $newsFeedDetailTitleMarginTopDesktop,
    newsFeedDetailTitleMarginBottom: $newsFeedDetailTitleMarginBottom,
    newsFeedDetailTitleMarginBottomTablet: $newsFeedDetailTitleMarginBottomTablet,
    newsFeedDetailTitleMarginBottomDesktop: $newsFeedDetailTitleMarginBottomDesktop,
    newsFeedDetailDescriptionFontFamily: $newsFeedDetailDescriptionFontFamily,
    newsFeedDetailDescriptionFontFamilyTablet: $newsFeedDetailDescriptionFontFamilyTablet,
    newsFeedDetailDescriptionFontFamilyDesktop: $newsFeedDetailDescriptionFontFamilyDesktop,
    newsFeedDetailDescriptionFontSize: $newsFeedDetailDescriptionFontSize,
    newsFeedDetailDescriptionFontSizeTablet: $newsFeedDetailDescriptionFontSizeTablet,
    newsFeedDetailDescriptionFontSizeDesktop: $newsFeedDetailDescriptionFontSizeDesktop,
    newsFeedDetailDescriptionFontColor: $newsFeedDetailDescriptionFontColor,
    newsFeedDetailDescriptionFontColorTablet: $newsFeedDetailDescriptionFontColorTablet,
    newsFeedDetailDescriptionFontColorDesktop: $newsFeedDetailDescriptionFontColorDesktop,
    newsFeedDetailDescriptionFontWeight: $newsFeedDetailDescriptionFontWeight,
    newsFeedDetailDescriptionFontWeightTablet: $newsFeedDetailDescriptionFontWeightTablet,
    newsFeedDetailDescriptionFontWeightDesktop: $newsFeedDetailDescriptionFontWeightDesktop,
    newsFeedDetailDescriptionItalic: $newsFeedDetailDescriptionItalic,
    newsFeedDetailDescriptionItalicTablet: $newsFeedDetailDescriptionItalicTablet,
    newsFeedDetailDescriptionItalicDesktop: $newsFeedDetailDescriptionItalicDesktop,
    newsFeedDetailDescriptionUnderline: $newsFeedDetailDescriptionUnderline,
    newsFeedDetailDescriptionUnderlineTablet: $newsFeedDetailDescriptionUnderlineTablet,
    newsFeedDetailDescriptionUnderlineDesktop: $newsFeedDetailDescriptionUnderlineDesktop,
    newsFeedDetailDescriptionLineHeight: $newsFeedDetailDescriptionLineHeight,
    newsFeedDetailDescriptionLineHeightTablet: $newsFeedDetailDescriptionLineHeightTablet,
    newsFeedDetailDescriptionLineHeightDesktop: $newsFeedDetailDescriptionLineHeightDesktop,
    newsFeedDetailDescriptionMarginTop: $newsFeedDetailDescriptionMarginTop,
    newsFeedDetailDescriptionMarginTopTablet: $newsFeedDetailDescriptionMarginTopTablet,
    newsFeedDetailDescriptionMarginTopDesktop: $newsFeedDetailDescriptionMarginTopDesktop,
    newsFeedDetailDescriptionMarginBottom: $newsFeedDetailDescriptionMarginBottom,
    newsFeedDetailDescriptionMarginBottomTablet: $newsFeedDetailDescriptionMarginBottomTablet,
    newsFeedDetailDescriptionMarginBottomDesktop: $newsFeedDetailDescriptionMarginBottomDesktop,
    newsFeedDetailSecondDescriptionFontFamily: $newsFeedDetailSecondDescriptionFontFamily,
    newsFeedDetailSecondDescriptionFontFamilyTablet: $newsFeedDetailSecondDescriptionFontFamilyTablet,
    newsFeedDetailSecondDescriptionFontFamilyDesktop: $newsFeedDetailSecondDescriptionFontFamilyDesktop,
    newsFeedDetailSecondDescriptionFontSize: $newsFeedDetailSecondDescriptionFontSize,
    newsFeedDetailSecondDescriptionFontSizeTablet: $newsFeedDetailSecondDescriptionFontSizeTablet,
    newsFeedDetailSecondDescriptionFontSizeDesktop: $newsFeedDetailSecondDescriptionFontSizeDesktop,
    newsFeedDetailSecondDescriptionFontColor: $newsFeedDetailSecondDescriptionFontColor,
    newsFeedDetailSecondDescriptionFontColorTablet: $newsFeedDetailSecondDescriptionFontColorTablet,
    newsFeedDetailSecondDescriptionFontColorDesktop: $newsFeedDetailSecondDescriptionFontColorDesktop,
    newsFeedDetailSecondDescriptionFontWeight: $newsFeedDetailSecondDescriptionFontWeight,
    newsFeedDetailSecondDescriptionFontWeightTablet: $newsFeedDetailSecondDescriptionFontWeightTablet,
    newsFeedDetailSecondDescriptionFontWeightDesktop: $newsFeedDetailSecondDescriptionFontWeightDesktop,
    newsFeedDetailSecondDescriptionItalic: $newsFeedDetailSecondDescriptionItalic,
    newsFeedDetailSecondDescriptionItalicTablet: $newsFeedDetailSecondDescriptionItalicTablet,
    newsFeedDetailSecondDescriptionItalicDesktop: $newsFeedDetailSecondDescriptionItalicDesktop,
    newsFeedDetailSecondDescriptionUnderline: $newsFeedDetailSecondDescriptionUnderline,
    newsFeedDetailSecondDescriptionUnderlineTablet: $newsFeedDetailSecondDescriptionUnderlineTablet,
    newsFeedDetailSecondDescriptionUnderlineDesktop: $newsFeedDetailSecondDescriptionUnderlineDesktop,
    newsFeedDetailSecondDescriptionLineHeight: $newsFeedDetailSecondDescriptionLineHeight,
    newsFeedDetailSecondDescriptionLineHeightTablet: $newsFeedDetailSecondDescriptionLineHeightTablet,
    newsFeedDetailSecondDescriptionLineHeightDesktop: $newsFeedDetailSecondDescriptionLineHeightDesktop,
    newsFeedDetailSecondDescriptionMarginTop: $newsFeedDetailSecondDescriptionMarginTop,
    newsFeedDetailSecondDescriptionMarginTopTablet: $newsFeedDetailSecondDescriptionMarginTopTablet,
    newsFeedDetailSecondDescriptionMarginTopDesktop: $newsFeedDetailSecondDescriptionMarginTopDesktop,
    newsFeedDetailSecondDescriptionMarginBottom: $newsFeedDetailSecondDescriptionMarginBottom,
    newsFeedDetailSecondDescriptionMarginBottomTablet: $newsFeedDetailSecondDescriptionMarginBottomTablet,
    newsFeedDetailSecondDescriptionMarginBottomDesktop: $newsFeedDetailSecondDescriptionMarginBottomDesktop,
    newsFeedDetailLabelsFontFamily: $newsFeedDetailLabelsFontFamily,
    newsFeedDetailLabelsFontFamilyTablet: $newsFeedDetailLabelsFontFamilyTablet,
    newsFeedDetailLabelsFontFamilyDesktop: $newsFeedDetailLabelsFontFamilyDesktop,
    newsFeedDetailLabelsFontSize: $newsFeedDetailLabelsFontSize,
    newsFeedDetailLabelsFontSizeTablet: $newsFeedDetailLabelsFontSizeTablet,
    newsFeedDetailLabelsFontSizeDesktop: $newsFeedDetailLabelsFontSizeDesktop,
    newsFeedDetailLabelsFontColor: $newsFeedDetailLabelsFontColor,
    newsFeedDetailLabelsFontColorTablet: $newsFeedDetailLabelsFontColorTablet,
    newsFeedDetailLabelsFontColorDesktop: $newsFeedDetailLabelsFontColorDesktop,
    newsFeedDetailLabelsFontWeight: $newsFeedDetailLabelsFontWeight,
    newsFeedDetailLabelsFontWeightTablet: $newsFeedDetailLabelsFontWeightTablet,
    newsFeedDetailLabelsFontWeightDesktop: $newsFeedDetailLabelsFontWeightDesktop,
    newsFeedDetailLabelsItalic: $newsFeedDetailLabelsItalic,
    newsFeedDetailLabelsItalicTablet: $newsFeedDetailLabelsItalicTablet,
    newsFeedDetailLabelsItalicDesktop: $newsFeedDetailLabelsItalicDesktop,
    newsFeedDetailLabelsUnderline: $newsFeedDetailLabelsUnderline,
    newsFeedDetailLabelsUnderlineTablet: $newsFeedDetailLabelsUnderlineTablet,
    newsFeedDetailLabelsUnderlineDesktop: $newsFeedDetailLabelsUnderlineDesktop,
    newsFeedDetailLabelsLineHeight: $newsFeedDetailLabelsLineHeight,
    newsFeedDetailLabelsLineHeightTablet: $newsFeedDetailLabelsLineHeightTablet,
    newsFeedDetailLabelsLineHeightDesktop: $newsFeedDetailLabelsLineHeightDesktop,
    newsFeedDetailLabelsMarginTop: $newsFeedDetailLabelsMarginTop,
    newsFeedDetailLabelsMarginTopTablet: $newsFeedDetailLabelsMarginTopTablet,
    newsFeedDetailLabelsMarginTopDesktop: $newsFeedDetailLabelsMarginTopDesktop,
    newsFeedDetailLabelsMarginBottom: $newsFeedDetailLabelsMarginBottom,
    newsFeedDetailLabelsMarginBottomTablet: $newsFeedDetailLabelsMarginBottomTablet,
    newsFeedDetailLabelsMarginBottomDesktop: $newsFeedDetailLabelsMarginBottomDesktop,
    newsFeedDetailTextFontFamily: $newsFeedDetailTextFontFamily,
    newsFeedDetailTextFontFamilyTablet: $newsFeedDetailTextFontFamilyTablet,
    newsFeedDetailTextFontFamilyDesktop: $newsFeedDetailTextFontFamilyDesktop,
    newsFeedDetailTextFontSize: $newsFeedDetailTextFontSize,
    newsFeedDetailTextFontSizeTablet: $newsFeedDetailTextFontSizeTablet,
    newsFeedDetailTextFontSizeDesktop: $newsFeedDetailTextFontSizeDesktop,
    newsFeedDetailTextFontColor: $newsFeedDetailTextFontColor,
    newsFeedDetailTextFontColorTablet: $newsFeedDetailTextFontColorTablet,
    newsFeedDetailTextFontColorDesktop: $newsFeedDetailTextFontColorDesktop,
    newsFeedDetailTextFontWeight: $newsFeedDetailTextFontWeight,
    newsFeedDetailTextFontWeightTablet: $newsFeedDetailTextFontWeightTablet,
    newsFeedDetailTextFontWeightDesktop: $newsFeedDetailTextFontWeightDesktop,
    newsFeedDetailTextItalic: $newsFeedDetailTextItalic,
    newsFeedDetailTextItalicTablet: $newsFeedDetailTextItalicTablet,
    newsFeedDetailTextItalicDesktop: $newsFeedDetailTextItalicDesktop,
    newsFeedDetailTextUnderline: $newsFeedDetailTextUnderline,
    newsFeedDetailTextUnderlineTablet: $newsFeedDetailTextUnderlineTablet,
    newsFeedDetailTextUnderlineDesktop: $newsFeedDetailTextUnderlineDesktop,
    newsFeedDetailTextLineHeight: $newsFeedDetailTextLineHeight,
    newsFeedDetailTextLineHeightTablet: $newsFeedDetailTextLineHeightTablet,
    newsFeedDetailTextLineHeightDesktop: $newsFeedDetailTextLineHeightDesktop,
    newsFeedDetailTextMarginTop: $newsFeedDetailTextMarginTop,
    newsFeedDetailTextMarginTopTablet: $newsFeedDetailTextMarginTopTablet,
    newsFeedDetailTextMarginTopDesktop: $newsFeedDetailTextMarginTopDesktop,
    newsFeedDetailTextMarginBottom: $newsFeedDetailTextMarginBottom,
    newsFeedDetailTextMarginBottomTablet: $newsFeedDetailTextMarginBottomTablet,
    newsFeedDetailTextMarginBottomDesktop: $newsFeedDetailTextMarginBottomDesktop,
    newsFeedListItemBackground: $newsFeedListItemBackground,
    newsFeedListItemBackgroundTablet: $newsFeedListItemBackgroundTablet,
    newsFeedListItemBackgroundDesktop: $newsFeedListItemBackgroundDesktop,
    newsFeedListDetailOverlayBackground: $newsFeedListDetailOverlayBackground,
    newsFeedListDetailOverlayBackgroundTablet: $newsFeedListDetailOverlayBackgroundTablet,
    newsFeedListDetailOverlayBackgroundDesktop: $newsFeedListDetailOverlayBackgroundDesktop,
    newsFeedListDetailOverlayLineUnderTitleColor: $newsFeedListDetailOverlayLineUnderTitleColor,
    newsFeedListDetailOverlayLineUnderTitleColorTablet: $newsFeedListDetailOverlayLineUnderTitleColorTablet,
    newsFeedListDetailOverlayLineUnderTitleColorDesktop: $newsFeedListDetailOverlayLineUnderTitleColorDesktop,
    newsFeedListDetailOverlayIconsColor: $newsFeedListDetailOverlayIconsColor,
    newsFeedListDetailOverlayIconsColorTablet: $newsFeedListDetailOverlayIconsColorTablet,
    newsFeedListDetailOverlayIconsColorDesktop: $newsFeedListDetailOverlayIconsColorDesktop,
    newsFeedFiltersOverlayBackground: $newsFeedFiltersOverlayBackground,
    newsFeedFiltersOverlayBackgroundTablet: $newsFeedFiltersOverlayBackgroundTablet,
    newsFeedFiltersOverlayBackgroundDesktop: $newsFeedFiltersOverlayBackgroundDesktop,
    newsFeedFilterIconColor: $newsFeedFilterIconColor,
    newsFeedFilterIconColorTablet: $newsFeedFilterIconColorTablet,
    newsFeedFilterIconColorDesktop: $newsFeedFilterIconColorDesktop,
    newsFeedSearchIconColor: $newsFeedSearchIconColor,
    newsFeedSearchIconColorTablet: $newsFeedSearchIconColorTablet,
    newsFeedSearchIconColorDesktop: $newsFeedSearchIconColorDesktop,
    newsFeedBookmarkIconColor: $newsFeedBookmarkIconColor,
    newsFeedBookmarkIconColorTablet: $newsFeedBookmarkIconColorTablet,
    newsFeedBookmarkIconColorDesktop: $newsFeedBookmarkIconColorDesktop,
    newsFeedImageBackground: $newsFeedImageBackground,
    newsFeedImageBackgroundTablet: $newsFeedImageBackgroundTablet,
    newsFeedImageBackgroundDesktop: $newsFeedImageBackgroundDesktop,
    newsFeedPaddingTop: $newsFeedPaddingTop,
    newsFeedPaddingRight: $newsFeedPaddingRight,
    newsFeedPaddingBottom: $newsFeedPaddingBottom,
    newsFeedPaddingLeft: $newsFeedPaddingLeft,
    newsFeedPaddingTopTablet: $newsFeedPaddingTopTablet,
    newsFeedPaddingRightTablet: $newsFeedPaddingRightTablet,
    newsFeedPaddingBottomTablet: $newsFeedPaddingBottomTablet,
    newsFeedPaddingLeftTablet: $newsFeedPaddingLeftTablet,
    newsFeedPaddingTopDesktop: $newsFeedPaddingTopDesktop,
    newsFeedPaddingRightDesktop: $newsFeedPaddingRightDesktop,
    newsFeedPaddingBottomDesktop: $newsFeedPaddingBottomDesktop,
    newsFeedPaddingLeftDesktop: $newsFeedPaddingLeftDesktop,
    newsFeedListItemBorderSides: $newsFeedListItemBorderSides,
    newsFeedListItemBorderSidesTablet: $newsFeedListItemBorderSidesTablet,
    newsFeedListItemBorderSidesDesktop: $newsFeedListItemBorderSidesDesktop,
    newsFeedListItemBorderWidth: $newsFeedListItemBorderWidth,
    newsFeedListItemBorderWidthTablet: $newsFeedListItemBorderWidthTablet,
    newsFeedListItemBorderWidthDesktop: $newsFeedListItemBorderWidthDesktop,
    newsFeedListItemBorderStyle: $newsFeedListItemBorderStyle,
    newsFeedListItemBorderStyleTablet: $newsFeedListItemBorderStyleTablet,
    newsFeedListItemBorderStyleDesktop: $newsFeedListItemBorderStyleDesktop,
    newsFeedListItemBorder: $newsFeedListItemBorder,
    newsFeedListItemBorderTablet: $newsFeedListItemBorderTablet,
    newsFeedListItemBorderDesktop: $newsFeedListItemBorderDesktop,
    newsFeedListItemBorderRadius: $newsFeedListItemBorderRadius,
    newsFeedListItemBorderRadiusTablet: $newsFeedListItemBorderRadiusTablet,
    newsFeedListItemBorderRadiusDesktop: $newsFeedListItemBorderRadiusDesktop,
    newsFeedListItemShadowStyle: $newsFeedListItemShadowStyle,
    newsFeedListItemShadowStyleTablet: $newsFeedListItemShadowStyleTablet,
    newsFeedListItemShadowStyleDesktop: $newsFeedListItemShadowStyleDesktop,
    newsFeedListItemShadowXoffset: $newsFeedListItemShadowXoffset,
    newsFeedListItemShadowXoffsetTablet: $newsFeedListItemShadowXoffsetTablet,
    newsFeedListItemShadowXoffsetDesktop: $newsFeedListItemShadowXoffsetDesktop,
    newsFeedListItemShadowYoffset: $newsFeedListItemShadowYoffset,
    newsFeedListItemShadowYoffsetTablet: $newsFeedListItemShadowYoffsetTablet,
    newsFeedListItemShadowYoffsetDesktop: $newsFeedListItemShadowYoffsetDesktop,
    newsFeedListItemShadowBlur: $newsFeedListItemShadowBlur,
    newsFeedListItemShadowBlurTablet: $newsFeedListItemShadowBlurTablet,
    newsFeedListItemShadowBlurDesktop: $newsFeedListItemShadowBlurDesktop,
    newsFeedListItemShadowSpread: $newsFeedListItemShadowSpread,
    newsFeedListItemShadowSpreadTablet: $newsFeedListItemShadowSpreadTablet,
    newsFeedListItemShadowSpreadDesktop: $newsFeedListItemShadowSpreadDesktop,
    newsFeedListItemShadowColor: $newsFeedListItemShadowColor,
    newsFeedListItemShadowColorTablet: $newsFeedListItemShadowColorTablet,
    newsFeedListItemShadowColorDesktop: $newsFeedListItemShadowColorDesktop,
    newsFeedPosition: $newsFeedPosition,
    newsFeedPositionTop: $newsFeedPositionTop,
    newsFeedPositionRight: $newsFeedPositionRight,
    newsFeedPositionBottom: $newsFeedPositionBottom,
    newsFeedPositionLeft: $newsFeedPositionLeft,
    newsFeedIndex: $newsFeedIndex,
    newsFeedDisplay: $newsFeedDisplay,
    newsFeedPositionTablet: $newsFeedPositionTablet,
    newsFeedPositionTopTablet: $newsFeedPositionTopTablet,
    newsFeedPositionRightTablet: $newsFeedPositionRightTablet,
    newsFeedPositionBottomTablet: $newsFeedPositionBottomTablet,
    newsFeedPositionLeftTablet: $newsFeedPositionLeftTablet,
    newsFeedIndexTablet: $newsFeedIndexTablet,
    newsFeedDisplayTablet: $newsFeedDisplayTablet,
    newsFeedPositionDesktop: $newsFeedPositionDesktop,
    newsFeedPositionTopDesktop: $newsFeedPositionTopDesktop,
    newsFeedPositionRightDesktop: $newsFeedPositionRightDesktop,
    newsFeedPositionBottomDesktop: $newsFeedPositionBottomDesktop,
    newsFeedPositionLeftDesktop: $newsFeedPositionLeftDesktop,
    newsFeedIndexDesktop: $newsFeedIndexDesktop,
    newsFeedDisplayDesktop: $newsFeedDisplayDesktop
  ), $options);

  $instanceSelector: '[data-widget-package="com.fliplet.dynamic-lists"]';
  $layoutSelector: '#{$instanceSelector} [data-dynamic-lists-layout="small-card"]';
  @if $widgetInstanceUUID != '' {
    $layoutSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"] [data-dynamic-lists-layout="small-card"]';
  } @else if $widgetInstanceId != '' {
    $layoutSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"] [data-dynamic-lists-layout="small-card"]';
  }

  #{$layoutSelector} {
    position: map-get($configuration, newsFeedPosition) !important;
    z-index: map-get($configuration, newsFeedIndex);

    @if map-get($configuration, newsFeedPosition) == 'relative' {
      @if map-get($configuration, newsFeedVisibility) == 'visible' {
        display: map-get($configuration, newsFeedDisplay) !important;
      } @else {
        display: none !important;
      }
    } @else {
      @if map-get($configuration, newsFeedVisibility) == 'visible' {
        display: block !important;
      } @else {
        display: none !important;
      }

      top: map-get($configuration, newsFeedPositionTop);
      right: map-get($configuration, newsFeedPositionRight);
      bottom: map-get($configuration, newsFeedPositionBottom);
      left: map-get($configuration, newsFeedPositionLeft);
    }

    width: map-get($configuration, newsFeedWidth);
    max-width: map-get($configuration, newsFeedMaxWidth);
    margin: map-get($configuration, newsFeedMarginTop)
      map-get($configuration, newsFeedMarginRight)
      map-get($configuration, newsFeedMarginBottom)
      map-get($configuration, newsFeedMarginLeft);

    padding: map-get($configuration, newsFeedPaddingTop)
      map-get($configuration, newsFeedPaddingRight)
      map-get($configuration, newsFeedPaddingBottom)
      map-get($configuration, newsFeedPaddingLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      position: map-get($configuration, newsFeedPositionTablet) !important;
      z-index: map-get($configuration, newsFeedIndexTablet);

      @if map-get($configuration, newsFeedPositionTablet) == 'relative' {
        @if map-get($configuration, newsFeedVisibilityTablet) == 'visible' {
          display: map-get($configuration, newsFeedDisplayTablet) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, newsFeedVisibilityTablet) == 'visible' {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, newsFeedPositionTopTablet);
        right: map-get($configuration, newsFeedPositionRightTablet);
        bottom: map-get($configuration, newsFeedPositionBottomTablet);
        left: map-get($configuration, newsFeedPositionLeftTablet);
      }

      width: map-get($configuration, newsFeedWidthTablet);
      max-width: map-get($configuration, newsFeedMaxWidthTablet);
      margin: map-get($configuration, newsFeedMarginTopTablet)
        map-get($configuration, newsFeedMarginRightTablet)
        map-get($configuration, newsFeedMarginBottomTablet)
        map-get($configuration, newsFeedMarginLeftTablet);

      padding: map-get($configuration, newsFeedPaddingTopTablet)
        map-get($configuration, newsFeedPaddingRightTablet)
        map-get($configuration, newsFeedPaddingBottomTablet)
        map-get($configuration, newsFeedPaddingLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      position: map-get($configuration, newsFeedPositionDesktop) !important;
      z-index: map-get($configuration, newsFeedIndexDesktop);

      @if map-get($configuration, newsFeedPositionDesktop) == 'relative' {
        @if map-get($configuration, newsFeedVisibilityDesktop) == 'visible' {
          display: map-get($configuration, newsFeedDisplayDesktop) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, newsFeedVisibilityDesktop) == 'visible' {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, newsFeedPositionTopDesktop);
        right: map-get($configuration, newsFeedPositionRightDesktop);
        bottom: map-get($configuration, newsFeedPositionBottomDesktop);
        left: map-get($configuration, newsFeedPositionLeftDesktop);
      }

      width: map-get($configuration, newsFeedWidthDesktop);
      max-width: map-get($configuration, newsFeedMaxWidthDesktop);
      margin: map-get($configuration, newsFeedMarginTopDesktop)
        map-get($configuration, newsFeedMarginRightDesktop)
        map-get($configuration, newsFeedMarginBottomDesktop)
        map-get($configuration, newsFeedMarginLeftDesktop);

      padding: map-get($configuration, newsFeedPaddingTopDesktop)
        map-get($configuration, newsFeedPaddingRightDesktop)
        map-get($configuration, newsFeedPaddingBottomDesktop)
        map-get($configuration, newsFeedPaddingLeftDesktop);
    }


    .new-news-feed-list-container .news-feed-search-filter-overlay {
      .news-feed-overlay-wrapper {
        background-color: map-get($configuration, newsFeedOverlayBackgroundColor);
        color: map-get($configuration, newsFeedOverlayFontColor);
      }

      .news-feed-overlay-header {
        background-color: map-get($configuration, newsFeedOverlayBackgroundColor);
      }

      .hidden-filter-controls-filter {
        border-color: rgba(map-get($configuration, newsFeedOverlayFontColor), 0.8);

        &:hover,
        &:focus {
          color: rgba(map-get($configuration, newsFeedOverlayFontColor), 0.7);
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .news-feed-overlay-wrapper {
          background-color: map-get($configuration, newsFeedOverlayBackgroundColorTablet);
          color: map-get($configuration, newsFeedOverlayFontColorTablet);
        }

        .news-feed-overlay-header {
          background-color: map-get($configuration, newsFeedOverlayBackgroundColorTablet);
        }

        .hidden-filter-controls-filter {
          border-color: rgba(map-get($configuration, newsFeedOverlayFontColorTablet), 0.8);

          &:hover,
          &:focus {
            color: rgba(map-get($configuration, newsFeedOverlayFontColorTablet), 0.7);
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .news-feed-overlay-wrapper {
          background-color: map-get($configuration, newsFeedOverlayBackgroundColorDesktop);
          color: map-get($configuration, newsFeedOverlayFontColorDesktop);
        }

        .news-feed-overlay-header {
          background-color: map-get($configuration, newsFeedOverlayBackgroundColorDesktop);
        }

        .hidden-filter-controls-filter {
          border-color: rgba(map-get($configuration, newsFeedOverlayFontColorDesktop), 0.8);

          &:hover,
          &:focus {
            color: rgba(map-get($configuration, newsFeedOverlayFontColorDesktop), 0.7);
          }
        }
      }
    }

    .new-news-feed-list-container,
    .news-feed-list-container {
      .slide-over {
        .news-feed-item-inner-content {
          background-color: map-get($configuration, newsFeedBackgroundColor);
          color: map-get($configuration, newsFeedFontColor);

          h2.news-feed-item-title {
            color: map-get($configuration, newsFeedFontColor);

            &:after {
              background-color: $highlightColor;
            }
          }
        }
      }

      .news-feed-list-item {
        .news-feed-item-close-btn {
          background-color: rgba(map-get($configuration, newsFeedBackgroundColor), 0.5);
          color: map-get($configuration, newsFeedFontColor);
        }

        &.open{
          .news-feed-item-content {
            background-color: map-get($configuration, newsFeedBackgroundColor);
          }
        }
      }

      .news-feed-item-content {
        .slide-under {
          color: rgba(map-get($configuration, newsFeedFontColor), 0.1);
          background-color: rgba(map-get($configuration, newsFeedFontColor), 0.04);
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .slide-over {
          .news-feed-item-inner-content {
            background-color: map-get($configuration, newsFeedBackgroundColorTablet);
            color: map-get($configuration, newsFeedFontColorTablet);

            h2.news-feed-item-title {
              color: map-get($configuration, newsFeedFontColorTablet);
            }
          }
        }

        .news-feed-list-item {
          .news-feed-item-close-btn {
            background-color: rgba(map-get($configuration, newsFeedBackgroundColorTablet), 0.5);
            color: map-get($configuration, newsFeedFontColorTablet);
          }

          &.open {
            .news-feed-item-content {
              background-color: map-get($configuration, newsFeedBackgroundColorTablet);
            }
          }
        }

        .news-feed-item-content {
          .slide-under {
            color: rgba(map-get($configuration, newsFeedFontColorTablet), 0.1);
            background-color: rgba(map-get($configuration, newsFeedFontColorTablet), 0.04);
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .slide-over {
          .news-feed-item-inner-content {
            background-color: map-get($configuration, newsFeedBackgroundColorDesktop);
            color: map-get($configuration, newsFeedFontColorDesktop);

            h2.news-feed-item-title {
              color: map-get($configuration, newsFeedFontColorDesktop);
            }
          }
        }

        .news-feed-list-item {
          .news-feed-item-close-btn {
            background-color: rgba(map-get($configuration, newsFeedBackgroundColorDesktop), 0.5);
            color: map-get($configuration, newsFeedFontColorDesktop);
          }

          &.open{
            .news-feed-item-content {
              background-color: map-get($configuration, newsFeedBackgroundColorDesktop);
            }
          }
        }

        .news-feed-item-content {
          .slide-under {
            color: rgba(map-get($configuration, newsFeedFontColorDesktop), 0.1);
            background-color: rgba(map-get($configuration, newsFeedFontColorDesktop), 0.04);
          }
        }
      }
    }

    .news-feed-detail-overlay {
      .news-feed-detail-overlay-wrapper {
        .news-feed-detail-overlay-panel {
          background-color: map-get($configuration, newsFeedDetailBackgroundColor);
        }

        .news-feed-item-inner-content {
          background-color: map-get($configuration, newsFeedDetailBackgroundColor);
          color: map-get($configuration, newsFeedDetailFontColor);

          h2.news-feed-item-title {
            color: map-get($configuration, newsFeedDetailFontColor);

            &:after {
              background-color: $highlightColor;
            }
          }
        }

        .news-feed-list-detail-image-wrapper {
          color: rgba(map-get($configuration, newsFeedDetailFontColor), 0.1);
          background-color: rgba(map-get($configuration, newsFeedDetailFontColor), 0.04);
        }

        .news-feed-detail-overlay-close {
          background-color: rgba(map-get($configuration, newsFeedDetailBackgroundColor), 0.5);
          color: map-get($configuration, newsFeedDetailFontColor);
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          .news-feed-detail-overlay-panel {
            background-color: map-get($configuration, newsFeedDetailBackgroundColorTablet);
          }

          .news-feed-item-inner-content {
            background-color: map-get($configuration, newsFeedDetailBackgroundColorTablet);
            color: map-get($configuration, newsFeedDetailFontColorTablet);

            h2.news-feed-item-title {
              color: map-get($configuration, newsFeedDetailFontColorTablet);
            }
          }

          .news-feed-list-detail-image-wrapper {
            color: rgba(map-get($configuration, newsFeedDetailFontColorTablet), 0.1);
            background-color: rgba(map-get($configuration, newsFeedDetailFontColorTablet), 0.04);
          }

          .news-feed-detail-overlay-close {
            background-color: rgba(map-get($configuration, newsFeedDetailBackgroundColorTablet), 0.5);
            color: map-get($configuration, newsFeedDetailFontColorTablet);
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          .news-feed-detail-overlay-panel {
            background-color: map-get($configuration, newsFeedDetailBackgroundColorDesktop);
          }

          .news-feed-item-inner-content {
            background-color: map-get($configuration, newsFeedDetailBackgroundColorDesktop);
            color: map-get($configuration, newsFeedDetailFontColorDesktop);

            h2.news-feed-item-title {
              color: map-get($configuration, newsFeedDetailFontColorDesktop);
            }
          }

          .news-feed-list-detail-image-wrapper {
            color: rgba(map-get($configuration, newsFeedDetailFontColorDesktop), 0.1);
            background-color: rgba(map-get($configuration, newsFeedDetailFontColorDesktop), 0.04);
          }

          .news-feed-detail-overlay-close {
            background-color: rgba(map-get($configuration, newsFeedDetailBackgroundColorDesktop), 0.5);
            color: map-get($configuration, newsFeedDetailFontColorDesktop);
          }
        }
      }
    }

    /* COMMENTS */
    .news-feed-comment-panel,
    .new-news-feed-comment-panel,
    .simple-list-comment-panel {
      background: map-get($configuration, newsFeedCommentsBackgroundColor);

      .loading-holder {
        color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.4);
      }

      .comments-offline {
        background-color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.4);
        color: map-get($configuration, newsFeedCommentsFontColor);
      }

      .news-feed-comment-panel-header,
      .simple-list-comment-panel-header {
        background-color: map-get($configuration, newsFeedCommentsBackgroundColor);
        color: map-get($configuration, newsFeedCommentsFontColor);
      }

      .news-feed-comment-input-holder,
      .simple-list-comment-input-holder {
        background: map-get($configuration, newsFeedCommentsBackgroundColor);
        border-color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.1);

        .cancel {
          color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.7);

          &:hover,
          &:focus,
          &:active:hover,
          &:active:focus {
            color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.7);
          }
        }

        .btn.comment,
        .btn.save {
          border-color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.3);
          color: rgba(map-get($configuration, newsFeedCommentsFontColor),0.3);
        }

        &.ready {
          .btn.comment,
          .btn.save {
            border-color: $highlightColor;
            background-color: $highlightColor;
            color: $primaryButtonTextColor;
          }
        }
      }

      .top-comment-holder {
        background-color: map-get($configuration, newsFeedCommentsBackgroundColor);
      }

      .fl-individual-comment.editing .top-comment-holder {
        background-color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.08);
      }

      .fl-comment-thumb {
        background-color: rgba(map-get($configuration, newsFeedCommentsFontColor), 0.04);
      }

      textarea[data-comment-body] {
        background-color: transparent;
        color: map-get($configuration, newsFeedCommentsFontColor);

        ~ .typeahead.dropdown-menu {
          border-color: rgba(map-get($configuration, newsFeedCommentsFontColor),0.1);

          > .active > a {
            background-color: $highlightColor;
            color: $primaryButtonTextColor;
          }
        }
      }

      .active .mention_username{
        color: $primaryButtonTextColor;
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        background: map-get($configuration, newsFeedCommentsBackgroundColorTablet);

        .loading-holder {
          color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.4);
        }

        .comments-offline {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.4);
          color: map-get($configuration, newsFeedCommentsFontColorTablet);
        }

        .news-feed-comment-panel-header,
        .simple-list-comment-panel-header {
          background-color: map-get($configuration, newsFeedCommentsBackgroundColorTablet);
          color: map-get($configuration, newsFeedCommentsFontColorTablet);
        }

        .news-feed-comment-input-holder,
        .simple-list-comment-input-holder {
          background: map-get($configuration, newsFeedCommentsBackgroundColorTablet);
          border-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.1);

          .cancel {
            color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.7);

            &:hover,
            &:focus,
            &:active:hover,
            &:active:focus {
              color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.7);
            }
          }

          .btn.comment,
          .btn.save {
            border-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.3);
            color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet),0.3);
          }

          &.ready {
            .btn.comment,
            .btn.save {
              color: $primaryButtonTextColorTablet;
            }
          }
        }

        .top-comment-holder {
          background-color: map-get($configuration, newsFeedCommentsBackgroundColorTablet);
        }

        .fl-individual-comment.editing .top-comment-holder {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.08);
        }

        .fl-comment-thumb {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet), 0.04);
        }

        textarea[data-comment-body] {
          background-color: transparent;
          color: map-get($configuration, newsFeedCommentsFontColorTablet);

          ~ .typeahead.dropdown-menu {
            border-color: rgba(map-get($configuration, newsFeedCommentsFontColorTablet),0.1);

            > .active > a {
              color: $primaryButtonTextColorTablet;
            }
          }
        }

        .active .mention_username{
          color: $primaryButtonTextColorTablet;
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        background: map-get($configuration, newsFeedCommentsBackgroundColorDesktop);

        .loading-holder {
          color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.4);
        }

        .comments-offline {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.4);
          color: map-get($configuration, newsFeedCommentsFontColorDesktop);
        }

        .news-feed-comment-panel-header,
        .simple-list-comment-panel-header {
          background-color: map-get($configuration, newsFeedCommentsBackgroundColorDesktop);
          color: map-get($configuration, newsFeedCommentsFontColorDesktop);
        }

        .news-feed-comment-input-holder,
        .simple-list-comment-input-holder {
          background: map-get($configuration, newsFeedCommentsBackgroundColorDesktop);
          border-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.1);

          .cancel {
            color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.7);

            &:hover,
            &:focus,
            &:active:hover,
            &:active:focus {
              color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.7);
            }
          }

          .btn.comment,
          .btn.save {
            border-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.3);
            color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop),0.3);
          }

          &.ready {
            .btn.comment,
            .btn.save {
              color: $primaryButtonTextColorDesktop;
            }
          }
        }

        .top-comment-holder {
          background-color: map-get($configuration, newsFeedCommentsBackgroundColorDesktop);
        }

        .fl-individual-comment.editing .top-comment-holder {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.08);
        }

        .fl-comment-thumb {
          background-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop), 0.04);
        }

        textarea[data-comment-body] {
          background-color: transparent;
          color: map-get($configuration, newsFeedCommentsFontColorDesktop);

          ~ .typeahead.dropdown-menu {
            border-color: rgba(map-get($configuration, newsFeedCommentsFontColorDesktop),0.1);

            > .active > a {
              color: $primaryButtonTextColorDesktop;
            }
          }
        }

        .active .mention_username {
          color: $primaryButtonTextColorDesktop;
        }
      }
    }

    // filter/search defaults
    .new-news-feed-list-container,
    .news-feed-list-container {
      width: map-get($configuration, newsFeedWidth);
      max-width: map-get($configuration, newsFeedMaxWidth);
      margin: map-get($configuration, newsFeedMarginTop)
        map-get($configuration, newsFeedMarginRight)
        map-get($configuration, newsFeedMarginBottom)
        map-get($configuration, newsFeedMarginLeft);

      .news-feed-search-filter-overlay {
        .apply-filters,
        .hidden-filter-controls-filter.mixitup-control-active {
          background-color: $highlightColor;
          color: $primaryButtonTextColor;
          border-color: $highlightColor;
        }
      }

      .filter-holder {
        .panel-default > .panel-heading {
          color: map-get($configuration, newsFeedOverlayFontColor);
          background-color: map-get($configuration, newsFeedOverlayBackgroundColor);
          border-bottom: 1px solid rgba(map-get($configuration, newsFeedOverlayFontColor), 0.2);
        }
        .panel-group .panel {
          background-color: lighten(map-get($configuration, newsFeedOverlayBackgroundColor), 10%);

          .panel-body {
            background-color: transparent;
          }
        }
      }

      // The use of !important in this case is to avoid CSS repetion
      // Some layouts on the newsFeed component have more specific targets

      .section-top-wrapper {
        .fa {
          color: $highlightColor;
        }
        .form-control {
          background-color: $bodyBackground;
          color: $bodyTextColor;

          &:focus {
            border-color: $highlightColor;
          }
        }
        .btn.search-btn {
          border: none;
          background-color: rgba($bodyTextColor, 0.1);
          color: $bodyTextColor;

          &:hover,
          &:active,
          &:active:hover {
            border: none;
          }
        }

        .search-feed:focus ~ .btn.search-btn {
          border: none;
        }

        .list-search-icon .fa {
          opacity: 1;
          color: $highlightColor !important;
        }

        & ~ .list-search-icon .fa {
          opacity: 1;
          color: $highlightColor !important;
        }
      }

      .hidden-search-controls .current-query-wrapper {
        border-color: $highlightColor;
        background-color: $highlightColor;
        color: $primaryButtonTextColor;

        &:hover,
        &:focus {
          color: rgba($primaryButtonTextColor, 0.7);
        }
      }

      .hidden-filter-controls-label,
      .search-query-holder {
        color: rgba($bodyTextColor, 0.5);
      }

      .hidden-filter-controls-filter {
        border-color: rgba($bodyTextColor, 0.8);

        &:hover,
        &:focus {
          color: rgba($bodyTextColor, 0.7);
        }

        &.mixitup-control-active {
          border-color: $highlightColor;
          background-color: $highlightColor;
          color: $primaryButtonTextColor;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColor, 0.7);
          }
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        width: map-get($configuration, newsFeedWidthTablet);
        max-width: map-get($configuration, newsFeedMaxWidthTablet);
        margin: map-get($configuration, newsFeedMarginTopTablet)
          map-get($configuration, newsFeedMarginRightTablet)
          map-get($configuration, newsFeedMarginBottomTablet)
          map-get($configuration, newsFeedMarginLeftTablet);

        .news-feed-search-filter-overlay {
          .apply-filters,
          .hidden-filter-controls-filter.mixitup-control-active {
            color: $primaryButtonTextColorTablet;
          }
        }

        .filter-holder {
          .panel-default > .panel-heading {
            color: map-get($configuration, newsFeedOverlayFontColorTablet);
            background-color: map-get($configuration, newsFeedOverlayBackgroundColorTablet);
            border-bottom: 1px solid rgba(map-get($configuration, newsFeedOverlayFontColorTablet), 0.2);
          }
          .panel-group .panel {
            background-color: lighten(map-get($configuration, newsFeedOverlayBackgroundColorTablet), 10%);

            .panel-body {
              background-color: transparent;
            }
          }
        }

        // The use of !important in this case is to avoid CSS repetion
        // Some layouts on the newsFeed component have more specific targets

        .search-holder {
          .form-control {
            background-color: $bodyBackgroundTablet;
            color: $bodyTextColorTablet;
          }
          .btn.search-btn {
            border: none;
            background-color: rgba($bodyTextColorTablet, 0.1);
            color: $bodyTextColorTablet;

            &:hover,
            &:active,
            &:active:hover {
              border: none;
            }
          }

          .search-feed:focus ~ .btn.search-btn {
            border: none;
          }

          .list-search-icon .fa {
            opacity: 1;
          }

          & ~ .list-search-icon .fa {
            opacity: 1;
          }
        }

        .hidden-search-controls .current-query-wrapper {
          color: $primaryButtonTextColorTablet;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColorTablet, 0.7);
          }
        }

        .hidden-filter-controls-label,
        .search-query-holder {
          color: rgba($bodyTextColorTablet, 0.5);
        }

        .hidden-filter-controls-filter {
          border-color: rgba($bodyTextColorTablet, 0.8);

          &:hover,
          &:focus {
            color: rgba($bodyTextColorTablet, 0.7);
          }

          &.mixitup-control-active {
            color: $primaryButtonTextColorTablet;

            &:hover,
            &:focus {
              color: rgba($primaryButtonTextColorTablet, 0.7);
            }
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        width: map-get($configuration, newsFeedWidthDesktop);
        max-width: map-get($configuration, newsFeedMaxWidthDesktop);
        margin: map-get($configuration, newsFeedMarginTopDesktop)
          map-get($configuration, newsFeedMarginRightDesktop)
          map-get($configuration, newsFeedMarginBottomDesktop)
          map-get($configuration, newsFeedMarginLeftDesktop);

        .news-feed-search-filter-overlay {
          .apply-filters,
          .hidden-filter-controls-filter.mixitup-control-active {
            color: $primaryButtonTextColorDesktop;
          }
        }

        .filter-holder {
          .panel-default > .panel-heading {
            color: map-get($configuration, newsFeedOverlayFontColorDesktop);
            background-color: map-get($configuration, newsFeedOverlayBackgroundColorDesktop);
            border-bottom: 1px solid rgba(map-get($configuration, newsFeedOverlayFontColorDesktop), 0.2);
          }
          .panel-group .panel {
            background-color: lighten(map-get($configuration, newsFeedOverlayBackgroundColorDesktop), 10%);

            .panel-body {
              background-color: transparent;
            }
          }
        }

        // The use of !important in this case is to avoid CSS repetion
        // Some layouts on the newsFeed component have more specific targets

        .search-holder {
          .form-control {
            background-color: $bodyBackgroundDesktop;
            color: $bodyTextColorDesktop;
          }
          .btn.search-btn {
            border: none;
            background-color: rgba($bodyTextColorDesktop, 0.1);
            color: $bodyTextColorDesktop;

            &:hover,
            &:active,
            &:active:hover {
              border: none;
            }
          }

          .search-feed:focus ~ .btn.search-btn {
            border: none;
          }

          .list-search-icon .fa {
            opacity: 1;
          }

          & ~ .list-search-icon .fa {
            opacity: 1;
          }
        }

        .hidden-search-controls .current-query-wrapper {
          color: $primaryButtonTextColorDesktop;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColorDesktop, 0.7);
          }
        }

        .hidden-filter-controls-label,
        .search-query-holder {
          color: rgba($bodyTextColorDesktop, 0.5);
        }

        .hidden-filter-controls-filter {
          border-color: rgba($bodyTextColorDesktop, 0.8);

          &:hover,
          &:focus {
            color: rgba($bodyTextColorDesktop, 0.7);
          }

          &.mixitup-control-active {
            color: $primaryButtonTextColorDesktop;

            &:hover,
            &:focus {
              color: rgba($primaryButtonTextColorDesktop, 0.7);
            }
          }
        }
      }
    }
  }
}

@include newsFeed();
