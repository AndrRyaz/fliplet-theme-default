@mixin agenda($options: (), $widgetInstanceId: '', $widgetInstanceUUID: '') {
  $configuration: map-merge((
  agendaOverlayFontColor: $agendaOverlayFontColor,
  agendaOverlayFontColorTablet: $agendaOverlayFontColorTablet,
  agendaOverlayFontColorDesktop: $agendaOverlayFontColorDesktop,
  agendaWidth: $agendaWidth,
  agendaWidthTablet: $agendaWidthTablet,
  agendaWidthDesktop: $agendaWidthDesktop,
  agendaMaxWidth: $agendaMaxWidth,
  agendaMaxWidthTablet: $agendaMaxWidthTablet,
  agendaMaxWidthDesktop: $agendaMaxWidthDesktop,
  agendaMarginTop: $agendaMarginTop,
  agendaMarginTopTablet: $agendaMarginTopTablet,
  agendaMarginTopDesktop: $agendaMarginTopDesktop,
  agendaMarginRight: $agendaMarginRight,
  agendaMarginRightTablet: $agendaMarginRightTablet,
  agendaMarginRightDesktop: $agendaMarginRightDesktop,
  agendaMarginBottom: $agendaMarginBottom,
  agendaMarginBottomTablet: $agendaMarginBottomTablet,
  agendaMarginBottomDesktop: $agendaMarginBottomDesktop,
  agendaMarginLeft: $agendaMarginLeft,
  agendaMarginLeftTablet: $agendaMarginLeftTablet,
  agendaMarginLeftDesktop: $agendaMarginLeftDesktop,
  agendaVisibility: $agendaVisibility,
  agendaVisibilityTablet: $agendaVisibilityTablet,
  agendaVisibilityDesktop: $agendaVisibilityDesktop,
  agendaTitleFontFamily: $agendaTitleFontFamily,
  agendaTitleFontFamilyTablet: $agendaTitleFontFamilyTablet,
  agendaTitleFontFamilyDesktop: $agendaTitleFontFamilyDesktop,
  agendaTitleFontSize: $agendaTitleFontSize,
  agendaTitleFontSizeTablet: $agendaTitleFontSizeTablet,
  agendaTitleFontSizeDesktop: $agendaTitleFontSizeDesktop,
  agendaTitleFontColor: $agendaTitleFontColor,
  agendaTitleFontColorTablet: $agendaTitleFontColorTablet,
  agendaTitleFontColorDesktop: $agendaTitleFontColorDesktop,
  agendaTitleFontWeight: $agendaTitleFontWeight,
  agendaTitleFontWeightTablet: $agendaTitleFontWeightTablet,
  agendaTitleFontWeightDesktop: $agendaTitleFontWeightDesktop,
  agendaTitleItalic: $agendaTitleItalic,
  agendaTitleItalicTablet: $agendaTitleItalicTablet,
  agendaTitleItalicDesktop: $agendaTitleItalicDesktop,
  agendaTitleUnderline: $agendaTitleUnderline,
  agendaTitleUnderlineTablet: $agendaTitleUnderlineTablet,
  agendaTitleUnderlineDesktop: $agendaTitleUnderlineDesktop,
  agendaTitleLineHeight: $agendaTitleLineHeight,
  agendaTitleLineHeightTablet: $agendaTitleLineHeightTablet,
  agendaTitleLineHeightDesktop: $agendaTitleLineHeightDesktop,
  agendaTitleMarginTop: $agendaTitleMarginTop,
  agendaTitleMarginTopTablet: $agendaTitleMarginTopTablet,
  agendaTitleMarginTopDesktop: $agendaTitleMarginTopDesktop,
  agendaTitleMarginBottom: $agendaTitleMarginBottom,
  agendaTitleMarginBottomTablet: $agendaTitleMarginBottomTablet,
  agendaTitleMarginBottomDesktop: $agendaTitleMarginBottomDesktop,
  agendaDescriptionFontFamily: $agendaDescriptionFontFamily,
  agendaDescriptionFontFamilyTablet: $agendaDescriptionFontFamilyTablet,
  agendaDescriptionFontFamilyDesktop: $agendaDescriptionFontFamilyDesktop,
  agendaDescriptionFontSize: $agendaDescriptionFontSize,
  agendaDescriptionFontSizeTablet: $agendaDescriptionFontSizeTablet,
  agendaDescriptionFontSizeDesktop: $agendaDescriptionFontSizeDesktop,
  agendaDescriptionFontColor: $agendaDescriptionFontColor,
  agendaDescriptionFontColorTablet: $agendaDescriptionFontColorTablet,
  agendaDescriptionFontColorDesktop: $agendaDescriptionFontColorDesktop,
  agendaDescriptionFontWeight: $agendaDescriptionFontWeight,
  agendaDescriptionFontWeightTablet: $agendaDescriptionFontWeightTablet,
  agendaDescriptionFontWeightDesktop: $agendaDescriptionFontWeightDesktop,
  agendaDescriptionItalic: $agendaDescriptionItalic,
  agendaDescriptionItalicTablet: $agendaDescriptionItalicTablet,
  agendaDescriptionItalicDesktop: $agendaDescriptionItalicDesktop,
  agendaDescriptionUnderline: $agendaDescriptionUnderline,
  agendaDescriptionUnderlineTablet: $agendaDescriptionUnderlineTablet,
  agendaDescriptionUnderlineDesktop: $agendaDescriptionUnderlineDesktop,
  agendaDescriptionLineHeight: $agendaDescriptionLineHeight,
  agendaDescriptionLineHeightTablet: $agendaDescriptionLineHeightTablet,
  agendaDescriptionLineHeightDesktop: $agendaDescriptionLineHeightDesktop,
  agendaDescriptionMarginTop: $agendaDescriptionMarginTop,
  agendaDescriptionMarginTopTablet: $agendaDescriptionMarginTopTablet,
  agendaDescriptionMarginTopDesktop: $agendaDescriptionMarginTopDesktop,
  agendaDescriptionMarginBottom: $agendaDescriptionMarginBottom,
  agendaDescriptionMarginBottomTablet: $agendaDescriptionMarginBottomTablet,
  agendaDescriptionMarginBottomDesktop: $agendaDescriptionMarginBottomDesktop,
  agendaSecondDescriptionFontFamily: $agendaSecondDescriptionFontFamily,
  agendaSecondDescriptionFontFamilyTablet: $agendaSecondDescriptionFontFamilyTablet,
  agendaSecondDescriptionFontFamilyDesktop: $agendaSecondDescriptionFontFamilyDesktop,
  agendaSecondDescriptionFontSize: $agendaSecondDescriptionFontSize,
  agendaSecondDescriptionFontSizeTablet: $agendaSecondDescriptionFontSizeTablet,
  agendaSecondDescriptionFontSizeDesktop: $agendaSecondDescriptionFontSizeDesktop,
  agendaSecondDescriptionFontColor: $agendaSecondDescriptionFontColor,
  agendaSecondDescriptionFontColorTablet: $agendaSecondDescriptionFontColorTablet,
  agendaSecondDescriptionFontColorDesktop: $agendaSecondDescriptionFontColorDesktop,
  agendaSecondDescriptionFontWeight: $agendaSecondDescriptionFontWeight,
  agendaSecondDescriptionFontWeightTablet: $agendaSecondDescriptionFontWeightTablet,
  agendaSecondDescriptionFontWeightDesktop: $agendaSecondDescriptionFontWeightDesktop,
  agendaSecondDescriptionItalic: $agendaSecondDescriptionItalic,
  agendaSecondDescriptionItalicTablet: $agendaSecondDescriptionItalicTablet,
  agendaSecondDescriptionItalicDesktop: $agendaSecondDescriptionItalicDesktop,
  agendaSecondDescriptionUnderline: $agendaSecondDescriptionUnderline,
  agendaSecondDescriptionUnderlineTablet: $agendaSecondDescriptionUnderlineTablet,
  agendaSecondDescriptionUnderlineDesktop: $agendaSecondDescriptionUnderlineDesktop,
  agendaSecondDescriptionLineHeight: $agendaSecondDescriptionLineHeight,
  agendaSecondDescriptionLineHeightTablet: $agendaSecondDescriptionLineHeightTablet,
  agendaSecondDescriptionLineHeightDesktop: $agendaSecondDescriptionLineHeightDesktop,
  agendaSecondDescriptionMarginTop: $agendaSecondDescriptionMarginTop,
  agendaSecondDescriptionMarginTopTablet: $agendaSecondDescriptionMarginTopTablet,
  agendaSecondDescriptionMarginTopDesktop: $agendaSecondDescriptionMarginTopDesktop,
  agendaSecondDescriptionMarginBottom: $agendaSecondDescriptionMarginBottom,
  agendaSecondDescriptionMarginBottomTablet: $agendaSecondDescriptionMarginBottomTablet,
  agendaSecondDescriptionMarginBottomDesktop: $agendaSecondDescriptionMarginBottomDesktop,
  agendaDetailTitleFontFamily: $agendaDetailTitleFontFamily,
  agendaDetailTitleFontFamilyTablet: $agendaDetailTitleFontFamilyTablet,
  agendaDetailTitleFontFamilyDesktop: $agendaDetailTitleFontFamilyDesktop,
  agendaDetailTitleFontSize: $agendaDetailTitleFontSize,
  agendaDetailTitleFontSizeTablet: $agendaDetailTitleFontSizeTablet,
  agendaDetailTitleFontSizeDesktop: $agendaDetailTitleFontSizeDesktop,
  agendaDetailTitleFontColor: $agendaDetailTitleFontColor,
  agendaDetailTitleFontColorTablet: $agendaDetailTitleFontColorTablet,
  agendaDetailTitleFontColorDesktop: $agendaDetailTitleFontColorDesktop,
  agendaDetailTitleFontWeight: $agendaDetailTitleFontWeight,
  agendaDetailTitleFontWeightTablet: $agendaDetailTitleFontWeightTablet,
  agendaDetailTitleFontWeightDesktop: $agendaDetailTitleFontWeightDesktop,
  agendaDetailTitleItalic: $agendaDetailTitleItalic,
  agendaDetailTitleItalicTablet: $agendaDetailTitleItalicTablet,
  agendaDetailTitleItalicDesktop: $agendaDetailTitleItalicDesktop,
  agendaDetailTitleUnderline: $agendaDetailTitleUnderline,
  agendaDetailTitleUnderlineTablet: $agendaDetailTitleUnderlineTablet,
  agendaDetailTitleUnderlineDesktop: $agendaDetailTitleUnderlineDesktop,
  agendaDetailTitleLineHeight: $agendaDetailTitleLineHeight,
  agendaDetailTitleLineHeightTablet: $agendaDetailTitleLineHeightTablet,
  agendaDetailTitleLineHeightDesktop: $agendaDetailTitleLineHeightDesktop,
  agendaDetailDescriptionFontFamily: $agendaDetailDescriptionFontFamily,
  agendaDetailDescriptionFontFamilyTablet: $agendaDetailDescriptionFontFamilyTablet,
  agendaDetailDescriptionFontFamilyDesktop: $agendaDetailDescriptionFontFamilyDesktop,
  agendaDetailDescriptionFontSize: $agendaDetailDescriptionFontSize,
  agendaDetailDescriptionFontSizeTablet: $agendaDetailDescriptionFontSizeTablet,
  agendaDetailDescriptionFontSizeDesktop: $agendaDetailDescriptionFontSizeDesktop,
  agendaDetailDescriptionFontColor: $agendaDetailDescriptionFontColor,
  agendaDetailDescriptionFontColorTablet: $agendaDetailDescriptionFontColorTablet,
  agendaDetailDescriptionFontColorDesktop: $agendaDetailDescriptionFontColorDesktop,
  agendaDetailDescriptionFontWeight: $agendaDetailDescriptionFontWeight,
  agendaDetailDescriptionFontWeightTablet: $agendaDetailDescriptionFontWeightTablet,
  agendaDetailDescriptionFontWeightDesktop: $agendaDetailDescriptionFontWeightDesktop,
  agendaDetailDescriptionItalic: $agendaDetailDescriptionItalic,
  agendaDetailDescriptionItalicTablet: $agendaDetailDescriptionItalicTablet,
  agendaDetailDescriptionItalicDesktop: $agendaDetailDescriptionItalicDesktop,
  agendaDetailDescriptionUnderline: $agendaDetailDescriptionUnderline,
  agendaDetailDescriptionUnderlineTablet: $agendaDetailDescriptionUnderlineTablet,
  agendaDetailDescriptionUnderlineDesktop: $agendaDetailDescriptionUnderlineDesktop,
  agendaDetailDescriptionLineHeight: $agendaDetailDescriptionLineHeight,
  agendaDetailDescriptionLineHeightTablet: $agendaDetailDescriptionLineHeightTablet,
  agendaDetailDescriptionLineHeightDesktop: $agendaDetailDescriptionLineHeightDesktop,
  agendaDetailDescriptionMarginTop: $agendaDetailDescriptionMarginTop,
  agendaDetailDescriptionMarginTopTablet: $agendaDetailDescriptionMarginTopTablet,
  agendaDetailDescriptionMarginTopDesktop: $agendaDetailDescriptionMarginTopDesktop,
  agendaDetailDescriptionMarginBottom: $agendaDetailDescriptionMarginBottom,
  agendaDetailDescriptionMarginBottomTablet: $agendaDetailDescriptionMarginBottomTablet,
  agendaDetailDescriptionMarginBottomDesktop: $agendaDetailDescriptionMarginBottomDesktop,
  agendaDetailSecondDescriptionFontFamily: $agendaDetailSecondDescriptionFontFamily,
  agendaDetailSecondDescriptionFontFamilyTablet: $agendaDetailSecondDescriptionFontFamilyTablet,
  agendaDetailSecondDescriptionFontFamilyDesktop: $agendaDetailSecondDescriptionFontFamilyDesktop,
  agendaDetailSecondDescriptionFontSize: $agendaDetailSecondDescriptionFontSize,
  agendaDetailSecondDescriptionFontSizeTablet: $agendaDetailSecondDescriptionFontSizeTablet,
  agendaDetailSecondDescriptionFontSizeDesktop: $agendaDetailSecondDescriptionFontSizeDesktop,
  agendaDetailSecondDescriptionFontColor: $agendaDetailSecondDescriptionFontColor,
  agendaDetailSecondDescriptionFontColorTablet: $agendaDetailSecondDescriptionFontColorTablet,
  agendaDetailSecondDescriptionFontColorDesktop: $agendaDetailSecondDescriptionFontColorDesktop,
  agendaDetailSecondDescriptionFontWeight: $agendaDetailSecondDescriptionFontWeight,
  agendaDetailSecondDescriptionFontWeightTablet: $agendaDetailSecondDescriptionFontWeightTablet,
  agendaDetailSecondDescriptionFontWeightDesktop: $agendaDetailSecondDescriptionFontWeightDesktop,
  agendaDetailSecondDescriptionItalic: $agendaDetailSecondDescriptionItalic,
  agendaDetailSecondDescriptionItalicTablet: $agendaDetailSecondDescriptionItalicTablet,
  agendaDetailSecondDescriptionItalicDesktop: $agendaDetailSecondDescriptionItalicDesktop,
  agendaDetailSecondDescriptionUnderline: $agendaDetailSecondDescriptionUnderline,
  agendaDetailSecondDescriptionUnderlineTablet: $agendaDetailSecondDescriptionUnderlineTablet,
  agendaDetailSecondDescriptionUnderlineDesktop: $agendaDetailSecondDescriptionUnderlineDesktop,
  agendaDetailSecondDescriptionLineHeight: $agendaDetailSecondDescriptionLineHeight,
  agendaDetailSecondDescriptionLineHeightTablet: $agendaDetailSecondDescriptionLineHeightTablet,
  agendaDetailSecondDescriptionLineHeightDesktop: $agendaDetailSecondDescriptionLineHeightDesktop,
  agendaDetailSecondDescriptionMarginTop: $agendaDetailSecondDescriptionMarginTop,
  agendaDetailSecondDescriptionMarginTopTablet: $agendaDetailSecondDescriptionMarginTopTablet,
  agendaDetailSecondDescriptionMarginTopDesktop: $agendaDetailSecondDescriptionMarginTopDesktop,
  agendaDetailSecondDescriptionMarginBottom: $agendaDetailSecondDescriptionMarginBottom,
  agendaDetailSecondDescriptionMarginBottomTablet: $agendaDetailSecondDescriptionMarginBottomTablet,
  agendaDetailSecondDescriptionMarginBottomDesktop: $agendaDetailSecondDescriptionMarginBottomDesktop,
  agendaItemTimeFontFamily: $agendaItemTimeFontFamily,
  agendaItemTimeFontFamilyTablet: $agendaItemTimeFontFamilyTablet,
  agendaItemTimeFontFamilyDesktop: $agendaItemTimeFontFamilyDesktop,
  agendaItemTimeFontSize: $agendaItemTimeFontSize,
  agendaItemTimeFontSizeTablet: $agendaItemTimeFontSizeTablet,
  agendaItemTimeFontSizeDesktop: $agendaItemTimeFontSizeDesktop,
  agendaItemTimeFontColor: $agendaItemTimeFontColor,
  agendaItemTimeFontColorTablet: $agendaItemTimeFontColorTablet,
  agendaItemTimeFontColorDesktop: $agendaItemTimeFontColorDesktop,
  agendaItemTimeFontWeight: $agendaItemTimeFontWeight,
  agendaItemTimeFontWeightTablet: $agendaItemTimeFontWeightTablet,
  agendaItemTimeFontWeightDesktop: $agendaItemTimeFontWeightDesktop,
  agendaItemTimeItalic: $agendaItemTimeItalic,
  agendaItemTimeItalicTablet: $agendaItemTimeItalicTablet,
  agendaItemTimeItalicDesktop: $agendaItemTimeItalicDesktop,
  agendaItemTimeUnderline: $agendaItemTimeUnderline,
  agendaItemTimeUnderlineTablet: $agendaItemTimeUnderlineTablet,
  agendaItemTimeUnderlineDesktop: $agendaItemTimeUnderlineDesktop,
  agendaItemTimeLineHeight: $agendaItemTimeLineHeight,
  agendaItemTimeLineHeightTablet: $agendaItemTimeLineHeightTablet,
  agendaItemTimeLineHeightDesktop: $agendaItemTimeLineHeightDesktop,
  agendaItemTimeMarginTop: $agendaItemTimeMarginTop,
  agendaItemTimeMarginTopTablet: $agendaItemTimeMarginTopTablet,
  agendaItemTimeMarginTopDesktop: $agendaItemTimeMarginTopDesktop,
  agendaItemTimeMarginBottom: $agendaItemTimeMarginBottom,
  agendaItemTimeMarginBottomTablet: $agendaItemTimeMarginBottomTablet,
  agendaItemTimeMarginBottomDesktop: $agendaItemTimeMarginBottomDesktop,
  agendaDetailTextFontFamily: $agendaDetailTextFontFamily,
  agendaDetailTextFontFamilyTablet: $agendaDetailTextFontFamilyTablet,
  agendaDetailTextFontFamilyDesktop: $agendaDetailTextFontFamilyDesktop,
  agendaDetailTextFontSize: $agendaDetailTextFontSize,
  agendaDetailTextFontSizeTablet: $agendaDetailTextFontSizeTablet,
  agendaDetailTextFontSizeDesktop: $agendaDetailTextFontSizeDesktop,
  agendaDetailTextFontColor: $agendaDetailTextFontColor,
  agendaDetailTextFontColorTablet: $agendaDetailTextFontColorTablet,
  agendaDetailTextFontColorDesktop: $agendaDetailTextFontColorDesktop,
  agendaDetailTextFontWeight: $agendaDetailTextFontWeight,
  agendaDetailTextFontWeightTablet: $agendaDetailTextFontWeightTablet,
  agendaDetailTextFontWeightDesktop: $agendaDetailTextFontWeightDesktop,
  agendaDetailTextItalic: $agendaDetailTextItalic,
  agendaDetailTextItalicTablet: $agendaDetailTextItalicTablet,
  agendaDetailTextItalicDesktop: $agendaDetailTextItalicDesktop,
  agendaDetailTextUnderline: $agendaDetailTextUnderline,
  agendaDetailTextUnderlineTablet: $agendaDetailTextUnderlineTablet,
  agendaDetailTextUnderlineDesktop: $agendaDetailTextUnderlineDesktop,
  agendaDetailTextLineHeight: $agendaDetailTextLineHeight,
  agendaDetailTextLineHeightTablet: $agendaDetailTextLineHeightTablet,
  agendaDetailTextLineHeightDesktop: $agendaDetailTextLineHeightDesktop,
  agendaDetailTextMarginTop: $agendaDetailTextMarginTop,
  agendaDetailTextMarginTopTablet: $agendaDetailTextMarginTopTablet,
  agendaDetailTextMarginTopDesktop: $agendaDetailTextMarginTopDesktop,
  agendaDetailTextMarginBottom: $agendaDetailTextMarginBottom,
  agendaDetailTextMarginBottomTablet: $agendaDetailTextMarginBottomTablet,
  agendaDetailTextMarginBottomDesktop: $agendaDetailTextMarginBottomDesktop,
  agendaListItemBackground: $agendaListItemBackground,
  agendaListItemBackgroundTablet: $agendaListItemBackgroundTablet,
  agendaListItemBackgroundDesktop: $agendaListItemBackgroundDesktop,
  agendaListDetailOverlayBackground: $agendaListDetailOverlayBackground,
  agendaListDetailOverlayBackgroundTablet: $agendaListDetailOverlayBackgroundTablet,
  agendaListDetailOverlayBackgroundDesktop: $agendaListDetailOverlayBackgroundDesktop,
  agendaListDetailOverlayLineUnderTitleColor: $agendaListDetailOverlayLineUnderTitleColor,
  agendaListDetailOverlayLineUnderTitleColorTablet: $agendaListDetailOverlayLineUnderTitleColorTablet,
  agendaListDetailOverlayLineUnderTitleColorDesktop: $agendaListDetailOverlayLineUnderTitleColorDesktop,
  agendaListDetailOverlayIconsColor: $agendaListDetailOverlayIconsColor,
  agendaListDetailOverlayIconsColorTablet: $agendaListDetailOverlayIconsColorTablet,
  agendaListDetailOverlayIconsColorDesktop: $agendaListDetailOverlayIconsColorDesktop,
  agendaFiltersOverlayBackground: $agendaFiltersOverlayBackground,
  agendaFiltersOverlayBackgroundTablet: $agendaFiltersOverlayBackgroundTablet,
  agendaFiltersOverlayBackgroundDesktop: $agendaFiltersOverlayBackgroundDesktop,
  agendaFilterIconColor: $agendaFilterIconColor,
  agendaFilterIconColorTablet: $agendaFilterIconColorTablet,
  agendaFilterIconColorDesktop: $agendaFilterIconColorDesktop,
  agendaSearchIconColor: $agendaSearchIconColor,
  agendaSearchIconColorTablet: $agendaSearchIconColorTablet,
  agendaSearchIconColorDesktop: $agendaSearchIconColorDesktop,
  agendaBookmarkIconColor: $agendaBookmarkIconColor,
  agendaBookmarkIconColorTablet: $agendaBookmarkIconColorTablet,
  agendaBookmarkIconColorDesktop: $agendaBookmarkIconColorDesktop,
  agendaImageBackground: $agendaImageBackground,
  agendaImageBackgroundTablet: $agendaImageBackgroundTablet,
  agendaImageBackgroundDesktop: $agendaImageBackgroundDesktop,
  agendaPaddingTop: $agendaPaddingTop,
  agendaPaddingRight: $agendaPaddingRight,
  agendaPaddingBottom: $agendaPaddingBottom,
  agendaPaddingLeft: $agendaPaddingLeft,
  agendaPaddingTopTablet: $agendaPaddingTopTablet,
  agendaPaddingRightTablet: $agendaPaddingRightTablet,
  agendaPaddingBottomTablet: $agendaPaddingBottomTablet,
  agendaPaddingLeftTablet: $agendaPaddingLeftTablet,
  agendaPaddingTopDesktop: $agendaPaddingTopDesktop,
  agendaPaddingRightDesktop: $agendaPaddingRightDesktop,
  agendaPaddingBottomDesktop: $agendaPaddingBottomDesktop,
  agendaPaddingLeftDesktop: $agendaPaddingLeftDesktop,
  agendaListItemBorderSides: $agendaListItemBorderSides,
  agendaListItemBorderSidesTablet: $agendaListItemBorderSidesTablet,
  agendaListItemBorderSidesDesktop: $agendaListItemBorderSidesDesktop,
  agendaListItemBorderWidth: $agendaListItemBorderWidth,
  agendaListItemBorderWidthTablet: $agendaListItemBorderWidthTablet,
  agendaListItemBorderWidthDesktop: $agendaListItemBorderWidthDesktop,
  agendaListItemBorderStyle: $agendaListItemBorderStyle,
  agendaListItemBorderStyleTablet: $agendaListItemBorderStyleTablet,
  agendaListItemBorderStyleDesktop: $agendaListItemBorderStyleDesktop,
  agendaListItemBorder: $agendaListItemBorder,
  agendaListItemBorderTablet: $agendaListItemBorderTablet,
  agendaListItemBorderDesktop: $agendaListItemBorderDesktop,
  agendaListItemBorderRadius: $agendaListItemBorderRadius,
  agendaListItemBorderRadiusTablet: $agendaListItemBorderRadiusTablet,
  agendaListItemBorderRadiusDesktop: $agendaListItemBorderRadiusDesktop,
  agendaListItemShadowStyle: $agendaListItemShadowStyle,
  agendaListItemShadowStyleTablet: $agendaListItemShadowStyleTablet,
  agendaListItemShadowStyleDesktop: $agendaListItemShadowStyleDesktop,
  agendaListItemShadowXoffset: $agendaListItemShadowXoffset,
  agendaListItemShadowXoffsetTablet: $agendaListItemShadowXoffsetTablet,
  agendaListItemShadowXoffsetDesktop: $agendaListItemShadowXoffsetDesktop,
  agendaListItemShadowYoffset: $agendaListItemShadowYoffset,
  agendaListItemShadowYoffsetTablet: $agendaListItemShadowYoffsetTablet,
  agendaListItemShadowYoffsetDesktop: $agendaListItemShadowYoffsetDesktop,
  agendaListItemShadowBlur: $agendaListItemShadowBlur,
  agendaListItemShadowBlurTablet: $agendaListItemShadowBlurTablet,
  agendaListItemShadowBlurDesktop: $agendaListItemShadowBlurDesktop,
  agendaListItemShadowSpread: $agendaListItemShadowSpread,
  agendaListItemShadowSpreadTablet: $agendaListItemShadowSpreadTablet,
  agendaListItemShadowSpreadDesktop: $agendaListItemShadowSpreadDesktop,
  agendaListItemShadowColor: $agendaListItemShadowColor,
  agendaListItemShadowColorTablet: $agendaListItemShadowColorTablet,
  agendaListItemShadowColorDesktop: $agendaListItemShadowColorDesktop,
  agendaPosition: $agendaPosition,
  agendaPositionTop: $agendaPositionTop,
  agendaPositionRight: $agendaPositionRight,
  agendaPositionBottom: $agendaPositionBottom,
  agendaPositionLeft: $agendaPositionLeft,
  agendaIndex: $agendaIndex,
  agendaDisplay: $agendaDisplay,
  agendaPositionTablet: $agendaPositionTablet,
  agendaPositionTopTablet: $agendaPositionTopTablet,
  agendaPositionRightTablet: $agendaPositionRightTablet,
  agendaPositionBottomTablet: $agendaPositionBottomTablet,
  agendaPositionLeftTablet: $agendaPositionLeftTablet,
  agendaIndexTablet: $agendaIndexTablet,
  agendaDisplayTablet: $agendaDisplayTablet,
  agendaPositionDesktop: $agendaPositionDesktop,
  agendaPositionTopDesktop: $agendaPositionTopDesktop,
  agendaPositionRightDesktop: $agendaPositionRightDesktop,
  agendaPositionBottomDesktop: $agendaPositionBottomDesktop,
  agendaPositionLeftDesktop: $agendaPositionLeftDesktop,
  agendaIndexDesktop: $agendaIndexDesktop,
  agendaDisplayDesktop: $agendaDisplayDesktop
  ), $options);

  $instanceSelector: '[data-widget-package="com.fliplet.dynamic-lists"]';
  $layoutSelector: '#{$instanceSelector} [data-dynamic-lists-layout="agenda"]';
  @if $widgetInstanceUUID != '' {
    $layoutSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"] [data-dynamic-lists-layout="agenda"]';
  } @else if $widgetInstanceId != '' {
    $layoutSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"] [data-dynamic-lists-layout="agenda"]';
  }

  #{$layoutSelector} {
    position: map-get($configuration, agendaPosition) !important;
    z-index: map-get($configuration, agendaIndex);

    @if map-get($configuration, agendaPosition) == 'relative' {
      @if map-get($configuration, agendaVisibility) == 'visible' {
        display: map-get($configuration, agendaDisplay) !important;
      } @else {
        display: none !important;
      }
    } @else {
      @if map-get($configuration, agendaVisibility) == 'visible' {
        display: block !important;
      } @else {
        display: none !important;
      }

      top: map-get($configuration, agendaPositionTop);
      right: map-get($configuration, agendaPositionRight);
      bottom: map-get($configuration, agendaPositionBottom);
      left: map-get($configuration, agendaPositionLeft);
    }

    width: map-get($configuration, agendaWidth);
    max-width: map-get($configuration, agendaMaxWidth);
    margin: map-get($configuration, agendaMarginTop)
      map-get($configuration, agendaMarginRight)
      map-get($configuration, agendaMarginBottom)
      map-get($configuration, agendaMarginLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      position: map-get($configuration, agendaPositionTablet) !important;
      z-index: map-get($configuration, agendaIndexTablet);

      @if map-get($configuration, agendaPositionTablet) == 'relative' {
        @if map-get($configuration, agendaVisibilityTablet) == 'visible' {
          display: map-get($configuration, agendaDisplayTablet) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, agendaVisibilityTablet) == 'visible' {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, agendaPositionTopTablet);
        right: map-get($configuration, agendaPositionRightTablet);
        bottom: map-get($configuration, agendaPositionBottomTablet);
        left: map-get($configuration, agendaPositionLeftTablet);
      }

      width: map-get($configuration, agendaWidthTablet);
      max-width: map-get($configuration, agendaMaxWidthTablet);
      margin: map-get($configuration, agendaMarginTopTablet)
        map-get($configuration, agendaMarginRightTablet)
        map-get($configuration, agendaMarginBottomTablet)
        map-get($configuration, agendaMarginLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      position: map-get($configuration, agendaPositionDesktop) !important;
      z-index: map-get($configuration, agendaIndexDesktop);

      @if map-get($configuration, agendaPositionDesktop) == 'relative' {
        @if map-get($configuration, agendaVisibilityDesktop) == 'visible' {
          display: map-get($configuration, agendaDisplayDesktop) !important;
        } @else {
          display: none !important;
        }
      } @else {
        @if map-get($configuration, agendaVisibilityDesktop) == 'visible' {
          display: block !important;
        } @else {
          display: none !important;
        }

        top: map-get($configuration, agendaPositionTopDesktop);
        right: map-get($configuration, agendaPositionRightDesktop);
        bottom: map-get($configuration, agendaPositionBottomDesktop);
        left: map-get($configuration, agendaPositionLeftDesktop);
      }

      width: map-get($configuration, agendaWidthDesktop);
      max-width: map-get($configuration, agendaMaxWidthDesktop);
      margin: map-get($configuration, agendaMarginTopDesktop)
        map-get($configuration, agendaMarginRightDesktop)
        map-get($configuration, agendaMarginBottomDesktop)
        map-get($configuration, agendaMarginLeftDesktop);
    }

    /* AGENDA */
    .agenda-detail-overlay {
      .agenda-detail-overlay-panel {
        background-color: map-get($configuration, agendaDetailBackgroundColor);
        color: map-get($configuration, agendaDetailFontColor);

        .agenda-detail-overlay-close {
          background-color: rgba(map-get($configuration, agendaDetailBackgroundColor), 0.5);
          color: map-get($configuration, agendaDetailFontColor);
        }

        .agenda-item-content-holder {
          .agenda-item-time {
            @include fontOnly((
              fontFamily: map-get($configuration, agendaItemTimeFontFamily),
              fontSize: map-get($configuration, agendaItemTimeFontSize),
              fontLineHeight: map-get($configuration, agendaItemTimeLineHeight),
              fontWeight: map-get($configuration, agendaItemTimeFontWeight),
              fontStyle: map-get($configuration, agendaItemTimeItalic),
              fontDecoration: map-get($configuration, agendaItemTimeUnderline)
            ));

            margin-top: map-get($configuration, agendaItemTimeMarginTop);
            margin-bottom: map-get($configuration, agendaItemTimeMarginBottom);
            color: map-get($configuration, agendaItemTimeFontColor);
          }

          .agenda-item-session-location .agenda-item-location {
            @include fontOnly((
              fontFamily: map-get($configuration, agendaDescriptionFontFamily),
              fontSize: map-get($configuration, agendaDescriptionFontSize),
              fontLineHeight: map-get($configuration, agendaDescriptionLineHeight),
              fontWeight: map-get($configuration, agendaDescriptionFontWeight),
              fontStyle: map-get($configuration, agendaDescriptionItalic),
              fontDecoration: map-get($configuration, agendaDescriptionUnderline)
            ));

            margin-top: map-get($configuration, agendaDescriptionMarginTop);
            margin-bottom: map-get($configuration, agendaDescriptionMarginBottom);
            color: map-get($configuration, agendaDescriptionFontColor);
          }

          h2.agenda-item-title {
            @include fontOnly((
              fontFamily: map-get($configuration, agendaTitleFontFamily),
              fontSize: map-get($configuration, agendaTitleFontSize),
              fontLineHeight: map-get($configuration, agendaTitleLineHeight),
              fontWeight: map-get($configuration, agendaTitleFontWeight),
              fontStyle: map-get($configuration, agendaTitleItalic),
              fontDecoration: map-get($configuration, agendaTitleUnderline)
            ));

            margin-top: map-get($configuration, agendaTitleMarginTop);
            margin-bottom: map-get($configuration, agendaTitleMarginBottom);
            color: map-get($configuration, agendaTitleFontColor);

            &:after {
              background-color: $highlightColor;
            }
          }

          .agenda-item-bookmark-holder {
            .fa-bookmark-o {
              color: rgba(map-get($configuration, agendaDetailFontColor), 0.2);

              &:after {
                color: rgba(map-get($configuration, agendaDetailFontColor), 0.5);
              }
            }
          }

          .bookmark-wrapper {
            .fa-bookmark-o {
              color: rgba(map-get($configuration, agendaDetailFontColor), 0.2);

              &:after {
                color: rgba(map-get($configuration, agendaDetailFontColor), 0.5);
              }
            }
          }
        }

        // Styles for tablet
        @include above($tabletBreakpoint) {
          background-color: map-get($configuration, agendaDetailBackgroundColorTablet);
          color: map-get($configuration, agendaDetailFontColorTablet);

          .agenda-detail-overlay-close {
            background-color: rgba(map-get($configuration, agendaDetailBackgroundColorTablet), 0.5);
            color: map-get($configuration, agendaDetailFontColorTablet);
          }

          .agenda-item-content-holder {
            .agenda-item-time {
              @include fontOnly((
                fontFamily: map-get($configuration, agendaItemTimeFontFamilyTablet),
                fontSize: map-get($configuration, agendaItemTimeFontSizeTablet),
                fontLineHeight: map-get($configuration, agendaItemTimeLineHeightTablet),
                fontWeight: map-get($configuration, agendaItemTimeFontWeightTablet),
                fontStyle: map-get($configuration, agendaItemTimeItalicTablet),
                fontDecoration: map-get($configuration, agendaItemTimeUnderlineTablet)
              ));

              margin-top: map-get($configuration, agendaItemTimeMarginTopTablet);
              margin-bottom: map-get($configuration, agendaItemTimeMarginBottomTablet);
              color: map-get($configuration, agendaItemTimeFontColorTablet);
            }

            .agenda-item-session-location .agenda-item-location {
              @include fontOnly((
                fontFamily: map-get($configuration, agendaDescriptionFontFamilyTablet),
                fontSize: map-get($configuration, agendaDescriptionFontSizeTablet),
                fontLineHeight: map-get($configuration, agendaDescriptionLineHeightTablet),
                fontWeight: map-get($configuration, agendaDescriptionFontWeightTablet),
                fontStyle: map-get($configuration, agendaDescriptionItalicTablet),
                fontDecoration: map-get($configuration, agendaDescriptionUnderlineTablet)
              ));

              margin-top: map-get($configuration, agendaDescriptionMarginTopTablet);
              margin-bottom: map-get($configuration, agendaDescriptionMarginBottomTablet);
              color: map-get($configuration, agendaDescriptionFontColorTablet);
            }

            h2.agenda-item-title {
              @include fontOnly((
                fontFamily: map-get($configuration, agendaTitleFontFamilyTablet),
                fontSize: map-get($configuration, agendaTitleFontSizeTablet),
                fontLineHeight: map-get($configuration, agendaTitleLineHeightTablet),
                fontWeight: map-get($configuration, agendaTitleFontWeightTablet),
                fontStyle: map-get($configuration, agendaTitleItalicTablet),
                fontDecoration: map-get($configuration, agendaTitleUnderlineTablet)
              ));

              margin-top: map-get($configuration, agendaTitleMarginTopTablet);
              margin-bottom: map-get($configuration, agendaTitleMarginBottomTablet);
              color: map-get($configuration, agendaTitleFontColorTablet);
            }

            .agenda-item-bookmark-holder {
              .fa-bookmark-o {
                color: rgba(map-get($configuration, agendaDetailFontColorTablet), 0.2);

                &:after {
                  color: rgba(map-get($configuration, agendaDetailFontColorTablet), 0.5);
                }
              }
            }

            .bookmark-wrapper {
              .fa-bookmark-o {
                color: rgba(map-get($configuration, agendaDetailFontColorTablet), 0.2);

                &:after {
                  color: rgba(map-get($configuration, agendaDetailFontColorTablet), 0.5);
                }
              }
            }
          }
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          background-color: map-get($configuration, agendaDetailBackgroundColorDesktop);
          color: map-get($configuration, agendaDetailFontColorDesktop);

          .agenda-detail-overlay-close {
            background-color: rgba(map-get($configuration, agendaDetailBackgroundColorDesktop), 0.5);
            color: map-get($configuration, agendaDetailFontColorDesktop);
          }

          .agenda-item-content-holder {
            .agenda-item-time {
              @include fontOnly((
                fontFamily: map-get($configuration, agendaItemTimeFontFamilyDesktop),
                fontSize: map-get($configuration, agendaItemTimeFontSizeDesktop),
                fontLineHeight: map-get($configuration, agendaItemTimeLineHeightDesktop),
                fontWeight: map-get($configuration, agendaItemTimeFontWeightDesktop),
                fontStyle: map-get($configuration, agendaItemTimeItalicDesktop),
                fontDecoration: map-get($configuration, agendaItemTimeUnderlineDesktop)
              ));

              margin-top: map-get($configuration, agendaItemTimeMarginTopDesktop);
              margin-bottom: map-get($configuration, agendaItemTimeMarginBottomDesktop);
              color: map-get($configuration, agendaItemTimeFontColorDesktop);
            }

            .agenda-item-session-location .agenda-item-location {
              @include fontOnly((
                fontFamily: map-get($configuration, agendaDescriptionFontFamilyDesktop),
                fontSize: map-get($configuration, agendaDescriptionFontSizeDesktop),
                fontLineHeight: map-get($configuration, agendaDescriptionLineHeightDesktop),
                fontWeight: map-get($configuration, agendaDescriptionFontWeightDesktop),
                fontStyle: map-get($configuration, agendaDescriptionItalicDesktop),
                fontDecoration: map-get($configuration, agendaDescriptionUnderlineDesktop)
              ));

              margin-top: map-get($configuration, agendaDescriptionMarginTopDesktop);
              margin-bottom: map-get($configuration, agendaDescriptionMarginBottomDesktop);
              color: map-get($configuration, agendaDescriptionFontColorDesktop);
            }

            h2.agenda-item-title {

            }

            .agenda-item-bookmark-holder {
              .fa-bookmark-o {
                color: rgba(map-get($configuration, agendaDetailFontColorDesktop), 0.2);

                &:after {
                  color: rgba(map-get($configuration, agendaDetailFontColorDesktop), 0.5);
                }
              }
            }

            .bookmark-wrapper {
              .fa-bookmark-o {
                color: rgba(map-get($configuration, agendaDetailFontColorDesktop), 0.2);

                &:after {
                  color: rgba(map-get($configuration, agendaDetailFontColorDesktop), 0.5);
                }
              }
            }
          }
        }
      }
    }

    .new-agenda-list-container {
      .agenda-date-selector {
        background-color: map-get($configuration, agendaAgendaTopBackgroundColor);

        ul {
          li {
            color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.5);

            .day {
              color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.7);
            }

            &.placeholder {
              color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.1);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.1);
              }
            }
            &.active {
              color: rgba(map-get($configuration, agendaAgendaTopTextActiveColor), 0.5);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextActiveColor), 1);
              }
            }
          }
        }
      }

      .search-results-list-date {
        color: rgba(map-get($configuration, agendaAgendaTopTextActiveColor), 1);
      }

      .agenda-list-item {
        .slide-over {
          .agenda-item-inner-content {
            background-color: map-get($configuration, agendaBackgroundColor);

            .agenda-item-time {
              color: map-get($configuration, agendaFontColor);
            }

            .agenda-item-session-location {
              color: map-get($configuration, agendaFontColor);
            }

            h2.agenda-item-title {
              color: map-get($configuration, agendaFontColor);
            }
          }
        }

        &.open {
          .slide-over {
            .agenda-item-inner-content {
              h2.agenda-item-title {
                &:after {
                  background-color: $highlightColor;
                }
              }
            }
          }
        }
      }

      .agenda-item-bookmark-holder {
        color: map-get($configuration, agendaFontColor);

        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColor), 0.2);
        }
      }

      .bookmark-wrapper {
        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColor), 0.2);

          &:after {
            color: rgba(map-get($configuration, agendaFontColor), 0.5);
          }
        }

        .fa-bookmark {
          color: $highlightColor;
        }
      }

      .agenda-list-item-content {
        .slide-over {
          background-color: map-get($configuration, agendaDetailBackgroundColor);
        }
      }

      .agenda-list-controls {
        background-color: map-get($configuration, agendaAgendaDatesBackgroundColor);

        .toggle-agenda {
          .fa {
            color: map-get($configuration, agendaAgendaDatesFontColor);
          }

          &.mixitup-control-active {
            .fa {
              color: $highlightColor;
            }
          }
        }

        .agenda-list-label {
          color: map-get($configuration, agendaAgendaDatesFontColor);
        }
      }

      .agenda-list-item {
        .agenda-item-close-btn {
          background-color: rgba(map-get($configuration, agendaDetailBackgroundColor), 0.5);
          color: map-get($configuration, agendaDetailFontColor);
        }
      }

      .agenda-state-messages {
        .loading-holder,
        .offline-holder {
          color: map-get($configuration, agendaDetailFontColor);
        }
      }

      .agenda-list-card-holder.empty + .agenda-item-empty-state {
        color: map-get($configuration, agendaDetailFontColor);
      }

      .section-top-wrapper,
      .hidden-controls,
      .agenda-list-card-holder,
      .agenda-list-item-content .container-fluid,
      .search-results,
      .agenda-detail-overlay-panel {
        max-width: map-get($configuration, agendaMaxWidth);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .agenda-date-selector {
          background-color: map-get($configuration, agendaAgendaTopBackgroundColorTablet);

          ul {
            li {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.5);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.7);
              }

              &.placeholder {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.1);

                .day {
                  color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.1);
                }
              }

              &.active {
                color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorTablet), 0.5);

                .day {
                  color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorTablet), 1);
                }
              }
            }
          }
        }

        .search-results-list-date {
          color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorTablet), 1);
        }

        .agenda-list-item {
          .slide-over {
            .agenda-item-inner-content {
              background-color: map-get($configuration, agendaBackgroundColorTablet);

              .agenda-item-time {
                color: map-get($configuration, agendaFontColorTablet);
              }

              .agenda-item-session-location {
                color: map-get($configuration, agendaFontColorTablet);
              }

              h2.agenda-item-title {
                color: map-get($configuration, agendaFontColorTablet);
              }
            }
          }
        }

        .agenda-item-bookmark-holder {
          color: map-get($configuration, agendaFontColorTablet);

          .fa-bookmark-o {
            color: rgba(map-get($configuration, agendaFontColorTablet), 0.2);
          }
        }

        .bookmark-wrapper {
          .fa-bookmark-o {
            color: rgba(map-get($configuration, agendaFontColorTablet), 0.2);

            &:after {
              color: rgba(map-get($configuration, agendaFontColorTablet), 0.5);
            }
          }
        }

        .agenda-list-item-content {
          .slide-over {
            background-color: map-get($configuration, agendaDetailBackgroundColorTablet);
          }
        }

        .agenda-list-controls {
          background-color: map-get($configuration, agendaAgendaDatesBackgroundColorTablet);

          .toggle-agenda {
            .fa {
              color: map-get($configuration, agendaAgendaDatesFontColorTablet);
            }
          }

          .agenda-list-label {
            color: map-get($configuration, agendaAgendaDatesFontColorTablet);
          }
        }

        .agenda-list-item {
          .agenda-item-close-btn {
            background-color: rgba(map-get($configuration, agendaDetailBackgroundColorTablet), 0.5);
            color: map-get($configuration, agendaDetailFontColorTablet);
          }
        }

        .agenda-state-messages {
          .loading-holder,
          .offline-holder {
            color: map-get($configuration, agendaDetailFontColorTablet);
          }
        }

        .agenda-list-card-holder.empty + .agenda-item-empty-state {
          color: map-get($configuration, agendaDetailFontColorTablet);
        }

        .section-top-wrapper,
        .hidden-controls,
        .agenda-list-card-holder,
        .agenda-list-item-content .container-fluid,
        .search-results,
        .agenda-detail-overlay-panel {
          max-width: map-get($configuration, agendaMaxWidthTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .agenda-date-selector {
          background-color: map-get($configuration, agendaAgendaTopBackgroundColorDesktop);

          ul {
            li {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.5);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.7);
              }

              &.placeholder {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.1);

                .day {
                  color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.1);
                }
              }

              &.active {
                color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorDesktop), 0.5);

                .day {
                  color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorDesktop), 1);
                }
              }
            }
          }
        }

        .search-results-list-date {
          color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorDesktop), 1);
        }

        .agenda-list-item {
          .slide-over {
            .agenda-item-inner-content {
              background-color: map-get($configuration, agendaBackgroundColorDesktop);

              .agenda-item-time {
                color: map-get($configuration, agendaFontColorDesktop);
              }

              .agenda-item-session-location .agenda-item-location {
                @include fontOnly((
                  fontFamily: map-get($configuration, agendaDescriptionFontFamilyDesktop),
                  fontSize: map-get($configuration, agendaDescriptionFontSizeDesktop),
                  fontLineHeight: map-get($configuration, agendaDescriptionLineHeightDesktop),
                  fontWeight: map-get($configuration, agendaDescriptionFontWeightDesktop),
                  fontStyle: map-get($configuration, agendaDescriptionItalicDesktop),
                  fontDecoration: map-get($configuration, agendaDescriptionUnderlineDesktop)
                ));

                margin-top: map-get($configuration, agendaDescriptionMarginTopDesktop);
                margin-bottom: map-get($configuration, agendaDescriptionMarginBottomDesktop);
                color: map-get($configuration, agendaDescriptionFontColorDesktop);
              }

              h2.agenda-item-title {
                @include fontOnly((
                  fontFamily: map-get($configuration, agendaTitleFontFamilyDesktop),
                  fontSize: map-get($configuration, agendaTitleFontSizeDesktop),
                  fontLineHeight: map-get($configuration, agendaTitleLineHeightDesktop),
                  fontWeight: map-get($configuration, agendaTitleFontWeightDesktop),
                  fontStyle: map-get($configuration, agendaTitleItalicDesktop),
                  fontDecoration: map-get($configuration, agendaTitleUnderlineDesktop)
                ));

                margin-top: map-get($configuration, agendaTitleMarginTopDesktop);
                margin-bottom: map-get($configuration, agendaTitleMarginBottomDesktop);
                color: map-get($configuration, agendaTitleFontColorDesktop);
              }
            }
          }
        }

        .agenda-item-bookmark-holder {
          color: map-get($configuration, agendaFontColorDesktop);

          .fa-bookmark-o {
            color: rgba(map-get($configuration, agendaFontColorDesktop), 0.2);
          }
        }

        .bookmark-wrapper {
          .fa-bookmark-o {
            color: rgba(map-get($configuration, agendaFontColorDesktop), 0.2);

            &:after {
              color: rgba(map-get($configuration, agendaFontColorDesktop), 0.5);
            }
          }
        }

        .agenda-list-item-content {
          .slide-over {
            background-color: map-get($configuration, agendaDetailBackgroundColorDesktop);
          }
        }

        .agenda-list-controls {
          background-color: map-get($configuration, agendaAgendaDatesBackgroundColorDesktop);

          .toggle-agenda {
            .fa {
              color: map-get($configuration, agendaAgendaDatesFontColorDesktop);
            }
          }

          .agenda-list-label {
            color: map-get($configuration, agendaAgendaDatesFontColorDesktop);
          }
        }

        .agenda-list-item {
          .agenda-item-close-btn {
            background-color: rgba(map-get($configuration, agendaDetailBackgroundColorDesktop), 0.5);
            color: map-get($configuration, agendaDetailFontColorDesktop);
          }
        }

        .agenda-state-messages {
          .loading-holder,
          .offline-holder {
            color: map-get($configuration, agendaDetailFontColorDesktop);
          }
        }

        .agenda-list-card-holder.empty + .agenda-item-empty-state {
          color: map-get($configuration, agendaDetailFontColorDesktop);
        }

        .section-top-wrapper,
        .hidden-controls,
        .agenda-list-card-holder,
        .agenda-list-item-content .container-fluid,
        .search-results,
        .agenda-detail-overlay-panel {
          max-width: map-get($configuration, agendaMaxWidthDesktop);
        }
      }
    }

    /* Old Agenda */
    .agenda-date-selector {
      background-color: map-get($configuration, agendaAgendaTopBackgroundColor);

      ul {
        li {
          color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.5);

          .day {
            color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.7);
          }

          &.placeholder {
            color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.1);

            .day {
              color: rgba(map-get($configuration, agendaAgendaTopTextColor), 0.1);
            }
          }

          &.active {
            color: rgba(map-get($configuration, agendaAgendaTopTextActiveColor), 0.5);

            .day {
              color: rgba(map-get($configuration, agendaAgendaTopTextActiveColor), 1);
            }
          }
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        background-color: map-get($configuration, agendaAgendaTopBackgroundColorTablet);

        ul {
          li {
            color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.5);

            .day {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.7);
            }

            &.placeholder {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.1);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorTablet), 0.1);
              }
            }

            &.active {
              color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorTablet), 0.5);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorTablet), 1);
              }
            }
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        background-color: map-get($configuration, agendaAgendaTopBackgroundColorDesktop);

        ul {
          li {
            color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.5);

            .day {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.7);
            }

            &.placeholder {
              color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.1);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextColorDesktop), 0.1);
              }
            }

            &.active {
              color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorDesktop), 0.5);

              .day {
                color: rgba(map-get($configuration, agendaAgendaTopTextActiveColorDesktop), 1);
              }
            }
          }
        }
      }
    }

    .agenda-list-item {
      .slide-over {
        .agenda-item-inner-content {
          background-color: map-get($configuration, agendaBackgroundColor);

          .agenda-item-time {
            color: map-get($configuration, agendaFontColor);
          }

          .agenda-item-session-location {
            color: map-get($configuration, agendaFontColor);
          }

          h2.agenda-item-title {
            color: map-get($configuration, agendaFontColor);
          }
        }
      }

      &.open {
        .slide-over {
          .agenda-item-inner-content {
            h2.agenda-item-title {
              &:after {
                background-color: $highlightColor;
              }
            }
          }
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .slide-over {
          .agenda-item-inner-content {
            background-color: map-get($configuration, agendaBackgroundColorTablet);

            .agenda-item-time {
              color: map-get($configuration, agendaFontColorTablet);
            }

            .agenda-item-session-location {
              color: map-get($configuration, agendaFontColorTablet);
            }

            h2.agenda-item-title {
              color: map-get($configuration, agendaFontColorTablet);
            }
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .slide-over {
          .agenda-item-inner-content {
            background-color: map-get($configuration, agendaBackgroundColorDesktop);

            .agenda-item-time {
              color: map-get($configuration, agendaFontColorDesktop);
            }

            .agenda-item-session-location {
              color: map-get($configuration, agendaFontColorDesktop);
            }

            h2.agenda-item-title {
              color: map-get($configuration, agendaFontColorDesktop);
            }
          }
        }
      }
    }

    .agenda-item-bookmark-holder {
      color: map-get($configuration, agendaFontColor);

      .fa-bookmark-o {
        color: rgba(map-get($configuration, agendaFontColor), 0.2);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, agendaFontColorTablet);

        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColorTablet), 0.2);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, agendaFontColorDesktop);

        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColorDesktop), 0.2);
        }
      }
    }

    .bookmark-wrapper {
      .fa-bookmark-o {
        color: rgba(map-get($configuration, agendaFontColor), 0.2);

        &:after {
          color: rgba(map-get($configuration, agendaFontColor), 0.5);
        }
      }

      .fa-bookmark {
        color: $highlightColor;
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColorTablet), 0.2);

          &:after {
            color: rgba(map-get($configuration, agendaFontColorTablet), 0.5);
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .fa-bookmark-o {
          color: rgba(map-get($configuration, agendaFontColorDesktop), 0.2);

          &:after {
            color: rgba(map-get($configuration, agendaFontColorDesktop), 0.5);
          }
        }
      }
    }

    .agenda-list-item-content {
      .slide-over {
        background-color: map-get($configuration, agendaBackgroundColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .slide-over {
          background-color: map-get($configuration, agendaBackgroundColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .slide-over {
          background-color: map-get($configuration, agendaBackgroundColorDesktop);
        }
      }
    }

    .agenda-list-controls {
      background-color: map-get($configuration, agendaAgendaDatesBackgroundColor);

      .toggle-agenda {
        .fa {
          color: map-get($configuration, agendaAgendaDatesFontColor);
        }

        &.mixitup-control-active {
          .fa {
            color: map-get($configuration, agendaAgendaDatesFontColor);
          }
        }
      }

      .agenda-list-label {
        color: map-get($configuration, agendaDetailFontColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        background-color: map-get($configuration, agendaAgendaDatesBackgroundColorTablet);

        .toggle-agenda {
          .fa {
            color: map-get($configuration, agendaAgendaDatesFontColorTablet);
          }

          &.mixitup-control-active {
            .fa {
              color: map-get($configuration, agendaAgendaDatesFontColorTablet);
            }
          }
        }

        .agenda-list-label {
          color: map-get($configuration, agendaDetailFontColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        background-color: map-get($configuration, agendaAgendaDatesBackgroundColorDesktop);

        .toggle-agenda {
          .fa {
            color: map-get($configuration, agendaAgendaDatesFontColorDesktop);
          }

          &.mixitup-control-active {
            .fa {
              color: map-get($configuration, agendaAgendaDatesFontColorDesktop);
            }
          }
        }

        .agenda-list-label {
          color: map-get($configuration, agendaDetailFontColorDesktop);
        }
      }
    }

    .agenda-list-item {
      .agenda-item-close-btn {
        background-color: rgba(map-get($configuration, agendaDetailBackgroundColor), 0.5);
        color: map-get($configuration, agendaDetailFontColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .agenda-item-close-btn {
          background-color: rgba(map-get($configuration, agendaDetailBackgroundColorTablet), 0.5);
          color: map-get($configuration, agendaDetailFontColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .agenda-item-close-btn {
          background-color: rgba(map-get($configuration, agendaDetailBackgroundColorDesktop), 0.5);
          color: map-get($configuration, agendaDetailFontColorDesktop);
        }
      }
    }

    .agenda-state-messages {
      .loading-holder,
      .offline-holder {
        color: map-get($configuration, agendaFontColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .loading-holder,
        .offline-holder {
          color: map-get($configuration, agendaFontColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .loading-holder,
        .offline-holder {
          color: map-get($configuration, agendaFontColorDesktop);
        }
      }
    }

    .agenda-list-card-holder.empty + .agenda-item-empty-state {
      color: map-get($configuration, agendaFontColor);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, agendaFontColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, agendaFontColorDesktop);
      }
    }

    .new-agenda-list-container .new-agenda-search-filter-overlay {
      .agenda-overlay-wrapper {
        background-color: map-get($configuration, agendaOverlayBackgroundColor);
        color: map-get($configuration, agendaOverlayFontColor);
      }

      .agenda-overlay-header {
        background-color: map-get($configuration, agendaOverlayBackgroundColor);
      }

      .hidden-filter-controls-filter {
        border-color: rgba(map-get($configuration, agendaOverlayFontColor), 0.8);

        &:hover,
        &:focus {
          color: rgba(map-get($configuration, agendaOverlayFontColor), 0.7);
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .agenda-overlay-wrapper {
          background-color: map-get($configuration, agendaOverlayBackgroundColorTablet);
          color: map-get($configuration, agendaOverlayFontColorTablet);
        }

        .agenda-overlay-header {
          background-color: map-get($configuration, agendaOverlayBackgroundColorTablet);
        }

        .hidden-filter-controls-filter {
          border-color: rgba(map-get($configuration, agendaOverlayFontColorTablet), 0.8);

          &:hover,
          &:focus {
            color: rgba(map-get($configuration, agendaOverlayFontColorTablet), 0.7);
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .agenda-overlay-wrapper {
          background-color: map-get($configuration, agendaOverlayBackgroundColorDesktop);
          color: map-get($configuration, agendaOverlayFontColorDesktop);
        }

        .agenda-overlay-header {
          background-color: map-get($configuration, agendaOverlayBackgroundColorDesktop);
        }

        .hidden-filter-controls-filter {
          border-color: rgba(map-get($configuration, agendaOverlayFontColorDesktop), 0.8);

          &:hover,
          &:focus {
            color: rgba(map-get($configuration, agendaOverlayFontColorDesktop), 0.7);
          }
        }
      }
    }

    .new-agenda-list-container {
      width: map-get($configuration, agendaWidth);
      max-width: map-get($configuration, agendaMaxWidth);
      margin: map-get($configuration, agendaMarginTop)
        map-get($configuration, agendaMarginRight)
        map-get($configuration, agendaMarginBottom)
        map-get($configuration, agendaMarginLeft);

      .new-agenda-search-filter-overlay {
        .apply-filters,
        .hidden-filter-controls-filter.mixitup-control-active {
          background-color: $highlightColor;
          color: $primaryButtonTextColor;
          border-color: $highlightColor;
        }
      }

      .filter-holder {
        .panel-default > .panel-heading {
          color: map-get($configuration, agendaOverlayFontColor);
          background-color: map-get($configuration, agendaOverlayBackgroundColor);
          border-bottom: 1px solid rgba(map-get($configuration, agendaOverlayFontColor), 0.2);
        }
        .panel-group .panel {
          background-color: lighten(map-get($configuration, agendaOverlayBackgroundColor), 10%);

          .panel-body {
            background-color: transparent;
          }
        }
      }

      // The use of !important in this case is to avoid CSS repetion
      // Some layouts on the agenda component have more specific targets

      .section-top-wrapper {
        .fa {
          color: $highlightColor;
        }
        .form-control {
          background-color: $bodyBackground;
          color: $bodyTextColor;

          &:focus {
            border-color: $highlightColor;
          }
        }
        .btn.search-btn {
          border: none;
          background-color: rgba($bodyTextColor, 0.1);
          color: $bodyTextColor;

          &:hover,
          &:active,
          &:active:hover {
            border: none;
          }
        }

        .search-feed:focus ~ .btn.search-btn {
          border: none;
        }

        .list-search-icon .fa {
          opacity: 1;
          color: $highlightColor !important;
        }

        & ~ .list-search-icon .fa {
          opacity: 1;
          color: $highlightColor !important;
        }
      }

      .hidden-search-controls .current-query-wrapper {
        border-color: $highlightColor;
        background-color: $highlightColor;
        color: $primaryButtonTextColor;

        &:hover,
        &:focus {
          color: rgba($primaryButtonTextColor, 0.7);
        }
      }

      .hidden-filter-controls-label,
      .search-query-holder {
        color: rgba($bodyTextColor, 0.5);
      }

      .hidden-filter-controls-filter {
        border-color: rgba($bodyTextColor, 0.8);

        &:hover,
        &:focus {
          color: rgba($bodyTextColor, 0.7);
        }

        &.mixitup-control-active {
          border-color: $highlightColor;
          background-color: $highlightColor;
          color: $primaryButtonTextColor;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColor, 0.7);
          }
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        width: map-get($configuration, agendaWidthTablet);
        max-width: map-get($configuration, agendaMaxWidthTablet);
        margin: map-get($configuration, agendaMarginTopTablet)
          map-get($configuration, agendaMarginRightTablet)
          map-get($configuration, agendaMarginBottomTablet)
          map-get($configuration, agendaMarginLeftTablet);

        .new-agenda-search-filter-overlay {
          .apply-filters,
          .hidden-filter-controls-filter.mixitup-control-active {
            color: $primaryButtonTextColorTablet;
          }
        }

        .filter-holder {
          .panel-default > .panel-heading {
            color: map-get($configuration, agendaOverlayFontColorTablet);
            background-color: map-get($configuration, agendaOverlayBackgroundColorTablet);
            border-bottom: 1px solid rgba(map-get($configuration, agendaOverlayFontColorTablet), 0.2);
          }
          .panel-group .panel {
            background-color: lighten(map-get($configuration, agendaOverlayBackgroundColorTablet), 10%);

            .panel-body {
              background-color: transparent;
            }
          }
        }

        // The use of !important in this case is to avoid CSS repetion
        // Some layouts on the agenda component have more specific targets

        .search-holder {
          .form-control {
            background-color: $bodyBackgroundTablet;
            color: $bodyTextColorTablet;
          }
          .btn.search-btn {
            border: none;
            background-color: rgba($bodyTextColorTablet, 0.1);
            color: $bodyTextColorTablet;

            &:hover,
            &:active,
            &:active:hover {
              border: none;
            }
          }

          .search-feed:focus ~ .btn.search-btn {
            border: none;
          }

          .list-search-icon .fa {
            opacity: 1;
          }

          & ~ .list-search-icon .fa {
            opacity: 1;
          }
        }

        .hidden-search-controls .current-query-wrapper {
          color: $primaryButtonTextColorTablet;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColorTablet, 0.7);
          }
        }

        .hidden-filter-controls-label,
        .search-query-holder {
          color: rgba($bodyTextColorTablet, 0.5);
        }

        .hidden-filter-controls-filter {
          border-color: rgba($bodyTextColorTablet, 0.8);

          &:hover,
          &:focus {
            color: rgba($bodyTextColorTablet, 0.7);
          }

          &.mixitup-control-active {
            color: $primaryButtonTextColorTablet;

            &:hover,
            &:focus {
              color: rgba($primaryButtonTextColorTablet, 0.7);
            }
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        width: map-get($configuration, agendaWidthDesktop);
        max-width: map-get($configuration, agendaMaxWidthDesktop);
        margin: map-get($configuration, agendaMarginTopDesktop)
          map-get($configuration, agendaMarginRightDesktop)
          map-get($configuration, agendaMarginBottomDesktop)
          map-get($configuration, agendaMarginLeftDesktop);

        .new-agenda-search-filter-overlay {
          .apply-filters,
          .hidden-filter-controls-filter.mixitup-control-active {
            color: $primaryButtonTextColorDesktop;
          }
        }

        .filter-holder {
          .panel-default > .panel-heading {
            color: map-get($configuration, agendaOverlayFontColorDesktop);
            background-color: map-get($configuration, agendaOverlayBackgroundColorDesktop);
            border-bottom: 1px solid rgba(map-get($configuration, agendaOverlayFontColorDesktop), 0.2);
          }
          .panel-group .panel {
            background-color: lighten(map-get($configuration, agendaOverlayBackgroundColorDesktop), 10%);

            .panel-body {
              background-color: transparent;
            }
          }
        }

        // The use of !important in this case is to avoid CSS repetion
        // Some layouts on the agenda component have more specific targets

        .search-holder {
          .form-control {
            background-color: $bodyBackgroundDesktop;
            color: $bodyTextColorDesktop;
          }
          .btn.search-btn {
            border: none;
            background-color: rgba($bodyTextColorDesktop, 0.1);
            color: $bodyTextColorDesktop;

            &:hover,
            &:active,
            &:active:hover {
              border: none;
            }
          }

          .search-feed:focus ~ .btn.search-btn {
            border: none;
          }

          .list-search-icon .fa {
            opacity: 1;
          }

          & ~ .list-search-icon .fa {
            opacity: 1;
          }
        }

        .hidden-search-controls .current-query-wrapper {
          color: $primaryButtonTextColorDesktop;

          &:hover,
          &:focus {
            color: rgba($primaryButtonTextColorDesktop, 0.7);
          }
        }

        .hidden-filter-controls-label,
        .search-query-holder {
          color: rgba($bodyTextColorDesktop, 0.5);
        }

        .hidden-filter-controls-filter {
          border-color: rgba($bodyTextColorDesktop, 0.8);

          &:hover,
          &:focus {
            color: rgba($bodyTextColorDesktop, 0.7);
          }

          &.mixitup-control-active {
            color: $primaryButtonTextColorDesktop;

            &:hover,
            &:focus {
              color: rgba($primaryButtonTextColorDesktop, 0.7);
            }
          }
        }
      }
    }
  }
}

@include agenda();
