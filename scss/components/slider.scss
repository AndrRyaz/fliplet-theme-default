@mixin slider($options: ()) {
  $configuration: map-merge((
    sliderWidth: $sliderWidth,
    sliderHeight: $sliderHeight,
    sliderMinWidth: $sliderMinWidth,
    sliderMaxWidth: $sliderMaxWidth,
    sliderMinHeight: $sliderMinHeight,
    sliderMaxHeight: $sliderMaxHeight,
    paginationBulletColor: $paginationBulletColor,
    paginationBulletColorActive: $paginationBulletColorActive,
    paginationChevronsColor: $paginationChevronsColor,
    sliderMarginTop: $sliderMarginTop,
    sliderMarginRight: $sliderMarginRight,
    sliderMarginBottom: $sliderMarginBottom,
    sliderMarginLeft: $sliderMarginLeft,
    sliderPaddingTop: $sliderPaddingTop,
    sliderPaddingRight: $sliderPaddingRight,
    sliderPaddingBottom: $sliderPaddingBottom,
    sliderPaddingLeft: $sliderPaddingLeft,
    sliderHeadingFont: $sliderHeadingFont,
    sliderHeadingSize: $sliderHeadingSize,
    sliderHeadingColor: $sliderHeadingColor,
    sliderHeadingWeight: $sliderHeadingWeight,
    sliderHeadingStyle: $sliderHeadingStyle,
    sliderHeadingDecoration: $sliderHeadingDecoration,
    sliderHeadingHeight: $sliderHeadingHeight,
    sliderTextFont: $sliderTextFont,
    sliderTextSize: $sliderTextSize,
    sliderTextColor: $sliderTextColor,
    sliderTextWeight: $sliderTextWeight,
    sliderTextStyle: $sliderTextStyle,
    sliderTextDecoration: $sliderTextDecoration,
    sliderTextHeight: $sliderTextHeight,
    paginationBulletWidth: $paginationBulletWidth,
    paginationBulletHeight: $paginationBulletHeight,
    paginationBulletBorderSides: $paginationBulletBorderSides,
    paginationBulletBorderWidth: $paginationBulletBorderWidth,
    paginationBulletBorderStyle: $paginationBulletBorderStyle,
    paginationBulletBorder: $paginationBulletBorder,
    paginationBulletBorderActiveSides: $paginationBulletBorderActiveSides,
    paginationBulletBorderActiveWidth: $paginationBulletBorderActiveWidth,
    paginationBulletBorderActiveStyle: $paginationBulletBorderActiveStyle,
    paginationBulletBorderActive: $paginationBulletBorderActive,
    sliderWidthTablet: $sliderWidthTablet,
    sliderHeightTablet: $sliderHeightTablet,
    sliderMinWidthTablet: $sliderMinWidthTablet,
    sliderMaxWidthTablet: $sliderMaxWidthTablet,
    sliderMinHeightTablet: $sliderMinHeightTablet,
    sliderMaxHeightTablet: $sliderMaxHeightTablet,
    paginationBulletColorTablet: $paginationBulletColorTablet,
    paginationBulletColorActiveTablet: $paginationBulletColorActiveTablet,
    paginationChevronsColorTablet: $paginationChevronsColorTablet,
    sliderMarginTopTablet: $sliderMarginTopTablet,
    sliderMarginRightTablet: $sliderMarginRightTablet,
    sliderMarginBottomTablet: $sliderMarginBottomTablet,
    sliderMarginLeftTablet: $sliderMarginLeftTablet,
    sliderPaddingTopTablet: $sliderPaddingTopTablet,
    sliderPaddingRightTablet: $sliderPaddingRightTablet,
    sliderPaddingBottomTablet: $sliderPaddingBottomTablet,
    sliderPaddingLeftTablet: $sliderPaddingLeftTablet,
    sliderHeadingFontTablet: $sliderHeadingFontTablet,
    sliderHeadingSizeTablet: $sliderHeadingSizeTablet,
    sliderHeadingColorTablet: $sliderHeadingColorTablet,
    sliderHeadingWeightTablet: $sliderHeadingWeightTablet,
    sliderHeadingStyleTablet: $sliderHeadingStyleTablet,
    sliderHeadingDecorationTablet: $sliderHeadingDecorationTablet,
    sliderHeadingHeightTablet: $sliderHeadingHeightTablet,
    sliderTextFontTablet: $sliderTextFontTablet,
    sliderTextSizeTablet: $sliderTextSizeTablet,
    sliderTextColorTablet: $sliderTextColorTablet,
    sliderTextWeightTablet: $sliderTextWeightTablet,
    sliderTextStyleTablet: $sliderTextStyleTablet,
    sliderTextDecorationTablet: $sliderTextDecorationTablet,
    sliderTextHeightTablet: $sliderTextHeightTablet,
    paginationBulletWidthTablet: $paginationBulletWidthTablet,
    paginationBulletHeightTablet: $paginationBulletHeightTablet,
    paginationBulletBorderSidesTablet: $paginationBulletBorderSidesTablet,
    paginationBulletBorderWidthTablet: $paginationBulletBorderWidthTablet,
    paginationBulletBorderStyleTablet: $paginationBulletBorderStyleTablet,
    paginationBulletBorderTablet: $paginationBulletBorderTablet,
    paginationBulletBorderActiveSidesTablet: $paginationBulletBorderActiveSidesTablet,
    paginationBulletBorderActiveWidthTablet: $paginationBulletBorderActiveWidthTablet,
    paginationBulletBorderActiveStyleTablet: $paginationBulletBorderActiveStyleTablet,
    paginationBulletBorderActiveTablet: $paginationBulletBorderActiveTablet,
    sliderWidthDesktop: $sliderWidthDesktop,
    sliderHeightDesktop: $sliderHeightDesktop,
    sliderMinWidthDesktop: $sliderMinWidthDesktop,
    sliderMaxWidthDesktop: $sliderMaxWidthDesktop,
    sliderMinHeightDesktop: $sliderMinHeightDesktop,
    sliderMaxHeightDesktop: $sliderMaxHeightDesktop,
    paginationBulletColorDesktop: $paginationBulletColorDesktop,
    paginationBulletColorActiveDesktop: $paginationBulletColorActiveDesktop,
    paginationChevronsColorDesktop: $paginationChevronsColorDesktop,
    sliderMarginTopDesktop: $sliderMarginTopDesktop,
    sliderMarginRightDesktop: $sliderMarginRightDesktop,
    sliderMarginBottomDesktop: $sliderMarginBottomDesktop,
    sliderMarginLeftDesktop: $sliderMarginLeftDesktop,
    sliderPaddingTopDesktop: $sliderPaddingTopDesktop,
    sliderPaddingRightDesktop: $sliderPaddingRightDesktop,
    sliderPaddingBottomDesktop: $sliderPaddingBottomDesktop,
    sliderPaddingLeftDesktop: $sliderPaddingLeftDesktop,
    sliderHeadingFontDesktop: $sliderHeadingFontDesktop,
    sliderHeadingSizeDesktop: $sliderHeadingSizeDesktop,
    sliderHeadingColorDesktop: $sliderHeadingColorDesktop,
    sliderHeadingWeightDesktop: $sliderHeadingWeightDesktop,
    sliderHeadingStyleDesktop: $sliderHeadingStyleDesktop,
    sliderHeadingDecorationDesktop: $sliderHeadingDecorationDesktop,
    sliderHeadingHeightDesktop: $sliderHeadingHeightDesktop,
    sliderTextFontDesktop: $sliderTextFontDesktop,
    sliderTextSizeDesktop: $sliderTextSizeDesktop,
    sliderTextColorDesktop: $sliderTextColorDesktop,
    sliderTextWeightDesktop: $sliderTextWeightDesktop,
    sliderTextStyleDesktop: $sliderTextStyleDesktop,
    sliderTextDecorationDesktop: $sliderTextDecorationDesktop,
    sliderTextHeightDesktop: $sliderTextHeightDesktop,
    paginationBulletWidthDesktop: $paginationBulletWidthDesktop,
    paginationBulletHeightDesktop: $paginationBulletHeightDesktop,
    paginationBulletBorderSidesDesktop: $paginationBulletBorderSidesDesktop,
    paginationBulletBorderWidthDesktop: $paginationBulletBorderWidthDesktop,
    paginationBulletBorderStyleDesktop: $paginationBulletBorderStyleDesktop,
    paginationBulletBorderDesktop: $paginationBulletBorderDesktop,
    paginationBulletBorderActiveSidesDesktop: $paginationBulletBorderActiveSidesDesktop,
    paginationBulletBorderActiveWidthDesktop: $paginationBulletBorderActiveWidthDesktop,
    paginationBulletBorderActiveStyleDesktop: $paginationBulletBorderActiveStyleDesktop,
    paginationBulletBorderActiveDesktop: $paginationBulletBorderActiveDesktop
  ), $options);

  .onboarding-holder {
    width: map-get($configuration, sliderWidth);
    min-width: map-get($configuration, sliderMinWidth);
    max-width: map-get($configuration, sliderMaxWidth);
    height: map-get($configuration, sliderHeight);
    min-height: map-get($configuration, sliderMinHeight);
    max-height: map-get($configuration, sliderMaxHeight);
    margin: map-get($configuration, sliderMarginTop)
      map-get($configuration, sliderMarginRight)
      map-get($configuration, sliderMarginBottom)
      map-get($configuration, sliderMarginLeft);
    padding: map-get($configuration, sliderPaddingTop)
      map-get($configuration, sliderPaddingRight)
      map-get($configuration, sliderPaddingBottom)
      map-get($configuration, sliderPaddingLeft);
    overflow: auto;

    // Styles for tablet
    @include above($tabletBreakpoint) {
      width: map-get($configuration, sliderWidthTablet);
      min-width: map-get($configuration, sliderMinWidth);
      max-width: map-get($configuration, sliderMaxWidth);
      height: map-get($configuration, sliderHeight);
      min-height: map-get($configuration, sliderMinHeight);
      max-height: map-get($configuration, sliderMaxHeight);
      margin: map-get($configuration, sliderMarginTopTablet)
        map-get($configuration, sliderMarginRightTablet)
        map-get($configuration, sliderMarginBottomTablet)
        map-get($configuration, sliderMarginLeftTablet);
      padding: map-get($configuration, sliderPaddingTop)
        map-get($configuration, sliderPaddingRight)
        map-get($configuration, sliderPaddingBottom)
        map-get($configuration, sliderPaddingLeft);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      width: map-get($configuration, sliderWidthDesktop);
      min-width: map-get($configuration, sliderMinWidth);
      max-width: map-get($configuration, sliderMaxWidth);
      height: map-get($configuration, sliderHeight);
      min-height: map-get($configuration, sliderMinHeight);
      max-height: map-get($configuration, sliderMaxHeight);
      margin: map-get($configuration, sliderMarginTopDesktop)
        map-get($configuration, sliderMarginRightDesktop)
        map-get($configuration, sliderMarginBottomDesktop)
        map-get($configuration, sliderMarginLeftDesktop);
      padding: map-get($configuration, sliderPaddingTop)
        map-get($configuration, sliderPaddingRight)
        map-get($configuration, sliderPaddingBottom)
        map-get($configuration, sliderPaddingLeft);
    }
  }

  .swiper-pagination-bullet {
    @include borderOnly((
      borderSides: map-get($configuration, paginationBulletBorderSides),
      borderWidth: map-get($configuration, paginationBulletBorderWidth),
      borderStyle: map-get($configuration, paginationBulletBorderStyle),
      borderColor: map-get($configuration, paginationBulletBorder)
    ));

    width: map-get($configuration, paginationBulletWidth);
    height: map-get($configuration, paginationBulletHeight);
    background: map-get($configuration, paginationBulletColor);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @include borderOnly((
        borderSides: map-get($configuration, paginationBulletBorderSidesTablet),
        borderWidth: map-get($configuration, paginationBulletBorderWidthTablet),
        borderStyle: map-get($configuration, paginationBulletBorderStyleTablet),
        borderColor: map-get($configuration, paginationBulletBorderTablet)
      ));

      width: map-get($configuration, paginationBulletWidthTablet);
      height: map-get($configuration, paginationBulletHeightTablet);
      background: map-get($configuration, paginationBulletColorTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @include borderOnly((
        borderSides: map-get($configuration, paginationBulletBorderSidesDesktop),
        borderWidth: map-get($configuration, paginationBulletBorderWidthDesktop),
        borderStyle: map-get($configuration, paginationBulletBorderStyleDesktop),
        borderColor: map-get($configuration, paginationBulletBorderDesktop)
      ));

      width: map-get($configuration, paginationBulletWidthDesktop);
      height: map-get($configuration, paginationBulletHeightDesktop);
      background: map-get($configuration, paginationBulletColorDesktop);
    }
  }

  .swiper-pagination-bullet-active {
    @include borderOnly((
      borderSides: map-get($configuration, paginationBulletBorder)ActiveSides,
      borderWidth: map-get($configuration, paginationBulletBorder)ActiveWidth,
      borderStyle: map-get($configuration, paginationBulletBorder)ActiveStyle,
      borderColor: map-get($configuration, paginationBulletBorder)Active
    ));

    background: map-get($configuration, paginationBulletColor)Active;

    // Styles for tablet
    @include above($tabletBreakpoint) {
      @include borderOnly((
        borderSides: map-get($configuration, paginationBulletBorder)ActiveSidesTablet,
        borderWidth: map-get($configuration, paginationBulletBorder)ActiveWidthTablet,
        borderStyle: map-get($configuration, paginationBulletBorder)ActiveStyleTablet,
        borderColor: map-get($configuration, paginationBulletBorder)ActiveTablet
      ));

      background: map-get($configuration, paginationBulletColor)ActiveTablet;
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      @include borderOnly((
        borderSides: map-get($configuration, paginationBulletBorder)ActiveSidesDesktop,
        borderWidth: map-get($configuration, paginationBulletBorder)ActiveWidthDesktop,
        borderStyle: map-get($configuration, paginationBulletBorder)ActiveStyleDesktop,
        borderColor: map-get($configuration, paginationBulletBorder)ActiveDesktop
      ));

      background: map-get($configuration, paginationBulletColor)ActiveDesktop;
    }
  }

  .swiper-button-next,
  .swiper-button-prev {
    color: map-get($configuration, paginationChevronsColor);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      color: map-get($configuration, paginationChevronsColorTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      color: map-get($configuration, paginationChevronsColorDesktop);
    }
  }

  .swiper-wrapper {
    p {
      @include fontOnly((
        fontFamily: map-get($configuration, sliderTextFont),
        fontSize: map-get($configuration, sliderTextSize),
        fontLineHeight: map-get($configuration, sliderTextHeight),
        fontWeight: map-get($configuration, sliderTextWeight),
        fontStyle: map-get($configuration, sliderTextStyle),
        fontDecoration: map-get($configuration, sliderTextDecoration)
      ));

      color: map-get($configuration, sliderTextColor);
    }

    h1 {
      @include fontOnly((
        fontFamily: map-get($configuration, sliderHeadingFont),
        fontSize: map-get($configuration, sliderHeadingSize),
        fontLineHeight: map-get($configuration, sliderHeadingHeight),
        fontWeight: map-get($configuration, sliderHeadingWeight),
        fontStyle: map-get($configuration, sliderHeadingStyle),
        fontDecoration: map-get($configuration, sliderHeadingDecoration)
      ));

      color: map-get($configuration, sliderHeadingColor);
    }

    // Styles for tablet
    @include above($tabletBreakpoint) {
      p {
        @include fontOnly((
          fontFamily: map-get($configuration, sliderTextFontTablet),
          fontSize: map-get($configuration, sliderTextSizeTablet),
          fontLineHeight: map-get($configuration, sliderTextHeightTablet),
          fontWeight: map-get($configuration, sliderTextWeightTablet),
          fontStyle: map-get($configuration, sliderTextStyleTablet),
          fontDecoration: map-get($configuration, sliderTextDecorationTablet)
        ));

        color: map-get($configuration, sliderTextColorTablet);
      }

      h1 {
        @include fontOnly((
          fontFamily: map-get($configuration, sliderHeadingFontTablet),
          fontSize: map-get($configuration, sliderHeadingSizeTablet),
          fontLineHeight: map-get($configuration, sliderHeadingHeightTablet),
          fontWeight: map-get($configuration, sliderHeadingWeightTablet),
          fontStyle: map-get($configuration, sliderHeadingStyleTablet),
          fontDecoration: map-get($configuration, sliderHeadingDecorationTablet)
        ));

        color: map-get($configuration, sliderHeadingColorTablet);
      }
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      p {
        @include fontOnly((
          fontFamily: map-get($configuration, sliderTextFontDesktop),
          fontSize: map-get($configuration, sliderTextSizeDesktop),
          fontLineHeight: map-get($configuration, sliderTextHeightDesktop),
          fontWeight: map-get($configuration, sliderTextWeightDesktop),
          fontStyle: map-get($configuration, sliderTextStyleDesktop),
          fontDecoration: map-get($configuration, sliderTextDecorationDesktop)
        ));

        color: map-get($configuration, sliderTextColorDesktop);
      }

      h1 {
        @include fontOnly((
          fontFamily: map-get($configuration, sliderHeadingFontDesktop),
          fontSize: map-get($configuration, sliderHeadingSizeDesktop),
          fontLineHeight: map-get($configuration, sliderHeadingHeightDesktop),
          fontWeight: map-get($configuration, sliderHeadingWeightDesktop),
          fontStyle: map-get($configuration, sliderHeadingStyleDesktop),
          fontDecoration: map-get($configuration, sliderHeadingDecorationDesktop)
        ));

        color: map-get($configuration, sliderHeadingColorDesktop);
      }
    }
  }
}

@include slider();

@mixin onboarding($options: ()) {
  $configuration: map-merge((
    onboardingSlideBackgroundColor: $onboardingSlideBackgroundColor,
    onboardingSkipTextColor: $onboardingSkipTextColor,
    onboardingPaginationBulletColor: $onboardingPaginationBulletColor,
    onboardingPaginationBulletColorActive: $onboardingPaginationBulletColorActive,
    onboardingPaginationChevronsBgColor: $onboardingPaginationChevronsBgColor,
    onboardingPaginationChevronsColor: $onboardingPaginationChevronsColor,
    onboardingHeadingFont: $onboardingHeadingFont,
    onboardingHeadingSize: $onboardingHeadingSize,
    onboardingHeadingColor: $onboardingHeadingColor,
    onboardingHeadingWeight: $onboardingHeadingWeight,
    onboardingHeadingStyle: $onboardingHeadingStyle,
    onboardingHeadingDecoration: $onboardingHeadingDecoration,
    onboardingHeadingHeight: $onboardingHeadingHeight,
    onboardingTextFont: $onboardingTextFont,
    onboardingTextSize: $onboardingTextSize,
    onboardingTextColor: $onboardingTextColor,
    onboardingTextWeight: $onboardingTextWeight,
    onboardingTextStyle: $onboardingTextStyle,
    onboardingTextDecoration: $onboardingTextDecoration,
    onboardingTextHeight: $onboardingTextHeight,
    onboardingPaginationBulletWidth: $onboardingPaginationBulletWidth,
    onboardingPaginationBulletHeight: $onboardingPaginationBulletHeight,
    onboardingPaginationBulletBorderSides: $onboardingPaginationBulletBorderSides,
    onboardingPaginationBulletBorderWidth: $onboardingPaginationBulletBorderWidth,
    onboardingPaginationBulletBorderStyle: $onboardingPaginationBulletBorderStyle,
    onboardingPaginationBulletBorder: $onboardingPaginationBulletBorder,
    onboardingPaginationBulletBorderActiveSides: $onboardingPaginationBulletBorderActiveSides,
    onboardingPaginationBulletBorderActiveWidth: $onboardingPaginationBulletBorderActiveWidth,
    onboardingPaginationBulletBorderActiveStyle: $onboardingPaginationBulletBorderActiveStyle,
    onboardingPaginationBulletBorderActive: $onboardingPaginationBulletBorderActive,
    onboardingSlideBackgroundColorTablet: $onboardingSlideBackgroundColorTablet,
    onboardingSkipTextColorTablet: $onboardingSkipTextColorTablet,
    onboardingPaginationBulletColorTablet: $onboardingPaginationBulletColorTablet,
    onboardingPaginationBulletColorActiveTablet: $onboardingPaginationBulletColorActiveTablet,
    onboardingPaginationChevronsBgColorTablet: $onboardingPaginationChevronsBgColorTablet,
    onboardingPaginationChevronsColorTablet: $onboardingPaginationChevronsColorTablet,
    onboardingHeadingFontTablet: $onboardingHeadingFontTablet,
    onboardingHeadingSizeTablet: $onboardingHeadingSizeTablet,
    onboardingHeadingColorTablet: $onboardingHeadingColorTablet,
    onboardingHeadingWeightTablet: $onboardingHeadingWeightTablet,
    onboardingHeadingStyleTablet: $onboardingHeadingStyleTablet,
    onboardingHeadingDecorationTablet: $onboardingHeadingDecorationTablet,
    onboardingHeadingHeightTablet: $onboardingHeadingHeightTablet,
    onboardingTextFontTablet: $onboardingTextFontTablet,
    onboardingTextSizeTablet: $onboardingTextSizeTablet,
    onboardingTextColorTablet: $onboardingTextColorTablet,
    onboardingTextWeightTablet: $onboardingTextWeightTablet,
    onboardingTextStyleTablet: $onboardingTextStyleTablet,
    onboardingTextDecorationTablet: $onboardingTextDecorationTablet,
    onboardingTextHeightTablet: $onboardingTextHeightTablet,
    onboardingPaginationBulletWidthTablet: $onboardingPaginationBulletWidthTablet,
    onboardingPaginationBulletHeightTablet: $onboardingPaginationBulletHeightTablet,
    onboardingPaginationBulletBorderSidesTablet: $onboardingPaginationBulletBorderSidesTablet,
    onboardingPaginationBulletBorderWidthTablet: $onboardingPaginationBulletBorderWidthTablet,
    onboardingPaginationBulletBorderStyleTablet: $onboardingPaginationBulletBorderStyleTablet,
    onboardingPaginationBulletBorderTablet: $onboardingPaginationBulletBorderTablet,
    onboardingPaginationBulletBorderActiveSidesTablet: $onboardingPaginationBulletBorderActiveSidesTablet,
    onboardingPaginationBulletBorderActiveWidthTablet: $onboardingPaginationBulletBorderActiveWidthTablet,
    onboardingPaginationBulletBorderActiveStyleTablet: $onboardingPaginationBulletBorderActiveStyleTablet,
    onboardingPaginationBulletBorderActiveTablet: $onboardingPaginationBulletBorderActiveTablet,
    onboardingSlideBackgroundColorDesktop: $onboardingSlideBackgroundColorDesktop,
    onboardingSkipTextColorDesktop: $onboardingSkipTextColorDesktop,
    onboardingPaginationBulletColorDesktop: $onboardingPaginationBulletColorDesktop,
    onboardingPaginationBulletColorActiveDesktop: $onboardingPaginationBulletColorActiveDesktop,
    onboardingPaginationChevronsBgColorDesktop: $onboardingPaginationChevronsBgColorDesktop,
    onboardingPaginationChevronsColorDesktop: $onboardingPaginationChevronsColorDesktop,
    onboardingHeadingFontDesktop: $onboardingHeadingFontDesktop,
    onboardingHeadingSizeDesktop: $onboardingHeadingSizeDesktop,
    onboardingHeadingColorDesktop: $onboardingHeadingColorDesktop,
    onboardingHeadingWeightDesktop: $onboardingHeadingWeightDesktop,
    onboardingHeadingStyleDesktop: $onboardingHeadingStyleDesktop,
    onboardingHeadingDecorationDesktop: $onboardingHeadingDecorationDesktop,
    onboardingHeadingHeightDesktop: $onboardingHeadingHeightDesktop,
    onboardingTextFontDesktop: $onboardingTextFontDesktop,
    onboardingTextSizeDesktop: $onboardingTextSizeDesktop,
    onboardingTextColorDesktop: $onboardingTextColorDesktop,
    onboardingTextWeightDesktop: $onboardingTextWeightDesktop,
    onboardingTextStyleDesktop: $onboardingTextStyleDesktop,
    onboardingTextDecorationDesktop: $onboardingTextDecorationDesktop,
    onboardingTextHeightDesktop: $onboardingTextHeightDesktop,
    onboardingPaginationBulletWidthDesktop: $onboardingPaginationBulletWidthDesktop,
    onboardingPaginationBulletHeightDesktop: $onboardingPaginationBulletHeightDesktop,
    onboardingPaginationBulletBorderSidesDesktop: $onboardingPaginationBulletBorderSidesDesktop,
    onboardingPaginationBulletBorderWidthDesktop: $onboardingPaginationBulletBorderWidthDesktop,
    onboardingPaginationBulletBorderStyleDesktop: $onboardingPaginationBulletBorderStyleDesktop,
    onboardingPaginationBulletBorderDesktop: $onboardingPaginationBulletBorderDesktop,
    onboardingPaginationBulletBorderActiveSidesDesktop: $onboardingPaginationBulletBorderActiveSidesDesktop,
    onboardingPaginationBulletBorderActiveWidthDesktop: $onboardingPaginationBulletBorderActiveWidthDesktop,
    onboardingPaginationBulletBorderActiveStyleDesktop: $onboardingPaginationBulletBorderActiveStyleDesktop,
    onboardingPaginationBulletBorderActiveDesktop: $onboardingPaginationBulletBorderActiveDesktop
  ), $options);

  .onboarding-holder.full-screen {
    width: 100%;
    min-width: auto;
    max-width: none;
    height: auto;
    min-height: auto;
    max-height: none;
    margin: 0;
    padding: 0;

    .ob-top-nav {
      .ob-skip {
        color: map-get($configuration, onboardingSkipTextColor);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, onboardingSkipTextColorTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, onboardingSkipTextColorDesktop);
        }
      }
    }

    .swiper-pagination-bullet {
      @include borderOnly((
        borderSides: map-get($configuration, onboardingPaginationBulletBorderSides),
        borderWidth: map-get($configuration, onboardingPaginationBulletBorderWidth),
        borderStyle: map-get($configuration, onboardingPaginationBulletBorderStyle),
        borderColor: map-get($configuration, onboardingPaginationBulletBorder)
      ));

      width: map-get($configuration, onboardingPaginationBulletWidth);
      height: map-get($configuration, onboardingPaginationBulletHeight);
      background: map-get($configuration, onboardingPaginationBulletColo);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @include borderOnly((
          borderSides: map-get($configuration, onboardingPaginationBulletBorderSidesTablet),
          borderWidth: map-get($configuration, onboardingPaginationBulletBorderWidthTablet),
          borderStyle: map-get($configuration, onboardingPaginationBulletBorderStyleTablet),
          borderColor: map-get($configuration, onboardingPaginationBulletBorderTablet)
        ));

        width: map-get($configuration, onboardingPaginationBulletWidthTablet);
        height: map-get($configuration, onboardingPaginationBulletHeightTablet);
        background: map-get($configuration, onboardingPaginationBulletColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @include borderOnly((
          borderSides: map-get($configuration, onboardingPaginationBulletBorderSidesDesktop),
          borderWidth: map-get($configuration, onboardingPaginationBulletBorderWidthDesktop),
          borderStyle: map-get($configuration, onboardingPaginationBulletBorderStyleDesktop),
          borderColor: map-get($configuration, onboardingPaginationBulletBorderDesktop)
        ));

        width: map-get($configuration, onboardingPaginationBulletWidthDesktop);
        height: map-get($configuration, onboardingPaginationBulletHeightDesktop);
        background: map-get($configuration, onboardingPaginationBulletColorDesktop);
      }
    }

    .swiper-pagination-bullet-active {
      @include borderOnly((
        borderSides: map-get($configuration, onboardingPaginationBulletBorderActiveSides),
        borderWidth: map-get($configuration, onboardingPaginationBulletBorderActiveWidth),
        borderStyle: map-get($configuration, onboardingPaginationBulletBorderActiveStyle),
        borderColor: map-get($configuration, onboardingPaginationBulletBorderActive)
      ));

      background: map-get($configuration, onboardingPaginationBulletColorActive);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @include borderOnly((
          borderSides: map-get($configuration, onboardingPaginationBulletBorderActiveSidesTablet),
          borderWidth: map-get($configuration, onboardingPaginationBulletBorderActiveWidthTablet),
          borderStyle: map-get($configuration, onboardingPaginationBulletBorderActiveStyleTablet),
          borderColor: map-get($configuration, onboardingPaginationBulletBorderActiveTablet)
        ));

        background: map-get($configuration, onboardingPaginationBulletColorActiveTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @include borderOnly((
          borderSides: map-get($configuration, onboardingPaginationBulletBorderActiveSidesDesktop),
          borderWidth: map-get($configuration, onboardingPaginationBulletBorderActiveWidthDesktop),
          borderStyle: map-get($configuration, onboardingPaginationBulletBorderActiveStyleDesktop),
          borderColor: map-get($configuration, onboardingPaginationBulletBorderActiveDesktop)
        ));

        background: map-get($configuration, onboardingPaginationBulletColorActiveDesktop);
      }
    }

    .swiper-button-next,
    .swiper-button-prev {
      color: map-get($configuration, onboardingPaginationChevronsColor);
      background-color: map-get($configuration, onboardingPaginationChevronsBgColor);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, onboardingPaginationChevronsColorTablet);
        background-color: map-get($configuration, onboardingPaginationChevronsBgColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, onboardingPaginationChevronsColorDesktop);
        background-color: map-get($configuration, onboardingPaginationChevronsBgColorDesktop);
      }
    }

    .swiper-wrapper {
      .swiper-slide-content {
        background-color: map-get($configuration, onboardingSlideBackgroundColor);
      }

      p {
        @include fontOnly((
          fontFamily: map-get($configuration, onboardingTextFont),
          fontSize: map-get($configuration, onboardingTextSize),
          fontLineHeight: map-get($configuration, onboardingTextHeight),
          fontWeight: map-get($configuration, onboardingTextWeight),
          fontStyle: map-get($configuration, onboardingTextStyle),
          fontDecoration: map-get($configuration, onboardingTextDecoration)
        ));
        color: map-get($configuration, onboardingTextColor);
      }

      h1 {
        @include fontOnly((
          fontFamily: map-get($configuration, onboardingHeadingFont),
          fontSize: map-get($configuration, onboardingHeadingSize),
          fontLineHeight: map-get($configuration, onboardingHeadingHeight),
          fontWeight: map-get($configuration, onboardingHeadingWeight),
          fontStyle: map-get($configuration, onboardingHeadingStyle),
          fontDecoration: map-get($configuration, onboardingHeadingDecoration)
        ));

        color: map-get($configuration, onboardingHeadingColor);
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        .swiper-slide-content {
          background-color: map-get($configuration, onboardingSlideBackgroundColorTablet);
        }

        p {
          @include fontOnly((
            fontFamily: map-get($configuration, onboardingTextFontTablet),
            fontSize: map-get($configuration, onboardingTextSizeTablet),
            fontLineHeight: map-get($configuration, onboardingTextHeightTablet),
            fontWeight: map-get($configuration, onboardingTextWeightTablet),
            fontStyle: map-get($configuration, onboardingTextStyleTablet),
            fontDecoration: map-get($configuration, onboardingTextDecorationTablet)
          ));

          color: map-get($configuration, onboardingTextColorTablet);
        }

        h1 {
          @include fontOnly((
            fontFamily: map-get($configuration, onboardingHeadingFontTablet),
            fontSize: map-get($configuration, onboardingHeadingSizeTablet),
            fontLineHeight: map-get($configuration, onboardingHeadingHeightTablet),
            fontWeight: map-get($configuration, onboardingHeadingWeightTablet),
            fontStyle: map-get($configuration, onboardingHeadingStyleTablet),
            fontDecoration: map-get($configuration, onboardingHeadingDecorationTablet)
          ));

          color: map-get($configuration, onboardingHeadingColorTablet);
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        .swiper-slide-content {
          background-color: map-get($configuration, onboardingSlideBackgroundColorDesktop);
        }

        p {
          @include fontOnly((
            fontFamily: map-get($configuration, onboardingTextFontDesktop),
            fontSize: map-get($configuration, onboardingTextSizeDesktop),
            fontLineHeight: map-get($configuration, onboardingTextHeightDesktop),
            fontWeight: map-get($configuration, onboardingTextWeightDesktop),
            fontStyle: map-get($configuration, onboardingTextStyleDesktop),
            fontDecoration: map-get($configuration, onboardingTextDecorationDesktop)
          ));

          color: map-get($configuration, onboardingTextColorDesktop);
        }

        h1 {
          @include fontOnly((
            fontFamily: map-get($configuration, onboardingHeadingFontDesktop),
            fontSize: map-get($configuration, onboardingHeadingSizeDesktop),
            fontLineHeight: map-get($configuration, onboardingHeadingHeightDesktop),
            fontWeight: map-get($configuration, onboardingHeadingWeightDesktop),
            fontStyle: map-get($configuration, onboardingHeadingStyleDesktop),
            fontDecoration: map-get($configuration, onboardingHeadingDecorationDesktop)
          ));

          color: map-get($configuration, onboardingHeadingColorDesktop);
        }
      }
    }
  }
}

@include onboarding();
