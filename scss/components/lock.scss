@mixin lock($options: (), $widgetInstanceId: '', $widgetInstanceUUID: '') {
  $configuration: map-merge((
    lockWidth: $lockWidth,
    lockMinWidth: $lockMinWidth,
    lockMaxWidth: $lockMaxWidth,
    lockMarginTop: $lockMarginTop,
    lockMarginRight: $lockMarginRight,
    lockMarginBottom: $lockMarginBottom,
    lockMarginLeft: $lockMarginLeft,
    lockPaddingTop: $lockPaddingTop,
    lockPaddingRight: $lockPaddingRight,
    lockPaddingBottom: $lockPaddingBottom,
    lockPaddingLeft: $lockPaddingLeft,
    lockInput: $lockInput,
    lockInputFocus: $lockInputFocus,
    lockChevronColor: $lockChevronColor,
    touchIDBorder: $touchIDBorder,
    lockWidthTablet: $lockWidthTablet,
    lockMinWidthTablet: $lockMinWidthTablet,
    lockMaxWidthTablet: $lockMaxWidthTablet,
    lockMarginTopTablet: $lockMarginTopTablet,
    lockMarginRightTablet: $lockMarginRightTablet,
    lockMarginBottomTablet: $lockMarginBottomTablet,
    lockMarginLeftTablet: $lockMarginLeftTablet,
    lockPaddingTopTablet: $lockPaddingTopTablet,
    lockPaddingRightTablet: $lockPaddingRightTablet,
    lockPaddingBottomTablet: $lockPaddingBottomTablet,
    lockPaddingLeftTablet: $lockPaddingLeftTablet,
    lockInputTablet: $lockInputTablet,
    lockInputFocusTablet: $lockInputFocusTablet,
    lockChevronColorTablet: $lockChevronColorTablet,
    touchIDBorderTablet: $touchIDBorderTablet,
    lockWidthDesktop: $lockWidthDesktop,
    lockMinWidthDesktop: $lockMinWidthDesktop,
    lockMaxWidthDesktop: $lockMaxWidthDesktop,
    lockMarginTopDesktop: $lockMarginTopDesktop,
    lockMarginRightDesktop: $lockMarginRightDesktop,
    lockMarginBottomDesktop: $lockMarginBottomDesktop,
    lockMarginLeftDesktop: $lockMarginLeftDesktop,
    lockPaddingTopDesktop: $lockPaddingTopDesktop,
    lockPaddingRightDesktop: $lockPaddingRightDesktop,
    lockPaddingBottomDesktop: $lockPaddingBottomDesktop,
    lockPaddingLeftDesktop: $lockPaddingLeftDesktop,
    lockInputDesktop: $lockInputDesktop,
    lockInputFocusDesktop: $lockInputFocusDesktop,
    lockChevronColorDesktop: $lockChevronColorDesktop,
    touchIDBorderDesktop: $touchIDBorderDesktop
  ), $options);

  $instanceSelector: '[data-widget-package="com.fliplet.lock"]';
  @if $widgetInstanceUUID != '' {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  } @else if $widgetInstanceId != '' {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    width: map-get($configuration, lockWidth);
    min-width: map-get($configuration, lockMinWidth);
    max-width: map-get($configuration, lockMaxWidth);
    margin: map-get($configuration, lockMarginTop)
      map-get($configuration, lockMarginRight)
      map-get($configuration, lockMarginBottom)
      map-get($configuration, lockMarginLeft);

    // Styles for tablet
    @include above($tabletBreakpoint) {
      width: map-get($configuration, lockWidthTablet);
      min-width: map-get($configuration, lockMinWidthTablet);
      max-width: map-get($configuration, lockMaxWidthTablet);
      margin: map-get($configuration, lockMarginTopTablet)
        map-get($configuration, lockMarginRightTablet)
        map-get($configuration, lockMarginBottomTablet)
        map-get($configuration, lockMarginLeftTablet);
    }

    // Styles for desktop
    @include above($desktopBreakpoint) {
      width: map-get($configuration, lockWidthDesktop);
      min-width: map-get($configuration, lockMinWidthDesktop);
      max-width: map-get($configuration, lockMaxWidthDesktop);
      margin: map-get($configuration, lockMarginTopDesktop)
        map-get($configuration, lockMarginRightDesktop)
        map-get($configuration, lockMarginBottomDesktop)
        map-get($configuration, lockMarginLeftDesktop);
    }

    .passcode-wrapper {
      padding: map-get($configuration, lockPaddingTop)
        map-get($configuration, lockPaddingRight)
        map-get($configuration, lockPaddingBottom)
        map-get($configuration, lockPaddingLeft);

      .passcode-field {
        border-bottom: 1px solid map-get($configuration, lockInput);

        &:focus {
          border-bottom: 1px solid map-get($configuration, lockInputFocus);
        }
      }

      // Styles for tablet
      @include above($tabletBreakpoint) {
        padding: map-get($configuration, lockPaddingTopTablet)
          map-get($configuration, lockPaddingRightTablet)
          map-get($configuration, lockPaddingBottomTablet)
          map-get($configuration, lockPaddingLeftTablet);

        .passcode-field {
          border-bottom: 1px solid map-get($configuration, lockInputTablet);

          &:focus {
            border-bottom: 1px solid map-get($configuration, lockInputFocusTablet);
          }
        }
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        padding: map-get($configuration, lockPaddingTopDesktop)
          map-get($configuration, lockPaddingRightDesktop)
          map-get($configuration, lockPaddingBottomDesktop)
          map-get($configuration, lockPaddingLeftDesktop);

        .passcode-field {
          border-bottom: 1px solid map-get($configuration, lockInputDesktop);

          &:focus {
            border-bottom: 1px solid map-get($configuration, lockInputFocusDesktop);
          }
        }
      }
    }

    .verify-field-wrapper .back-setup {
      color: map-get($configuration, lockChevronColor);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        color: map-get($configuration, lockChevronColorTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        color: map-get($configuration, lockChevronColorDesktop);
      }
    }

    .use-touchid {
      border: 1px solid map-get($configuration, touchIDBorder);

      // Styles for tablet
      @include above($tabletBreakpoint) {
        border: 1px solid map-get($configuration, touchIDBorderTablet);
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        border: 1px solid map-get($configuration, touchIDBorderDesktop);
      }
    }
  }
}

@include lock();